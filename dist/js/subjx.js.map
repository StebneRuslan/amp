{"version":3,"sources":["webpack://Subjx/webpack/bootstrap","webpack://Subjx/./src/js/core/util/util.js","webpack://Subjx/./src/js/core/observer/Observer.js","webpack://Subjx/./src/js/core/helper.js","webpack://Subjx/./src/js/core/util/css-util.js","webpack://Subjx/./src/js/core/transform/common.js","webpack://Subjx/./src/js/core/transform/subject.js","webpack://Subjx/./src/js/core/transform/html.js","webpack://Subjx/./src/js/core/transform/svg/path.js","webpack://Subjx/./src/js/core/transform/svg/index.js","webpack://Subjx/./src/js/index.js","webpack://Subjx/./src/js/core/transform/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","requestAnimFrame","requestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","msRequestAnimationFrame","f","setTimeout","cancelAnimFrame","cancelAnimationFrame","mozCancelAnimationFrame","requestID","clearTimeout","arrSlice","Array","forEach","slice","arrMap","map","warn","console","isDef","val","isUndef","Observable","_classCallCheck","this","observers","eventName","sub","obs","push","filter","subscriber","source","data","observer","onMove","onRotate","onResize","onApply","onRefreshState","Helper_","params","helper_classCallCheck","selector","document","querySelectorAll","length","count","nodeType","Subjx","_typeof","isArray","helper_createClass","prop","methods","setStyle","options","obj","len","style","_setStyle","getStyle","currentStyle","defaultView","getComputedStyle","includes","replace","_getStyle","apply","arguments","concat","node","sel","Helper","fn","arr","index","events","addEventListener","attachEvent","listenerDelegate","removeEventListener","detachEvent","_sel","el","evt","handler","act","doit","event","target","matches","parentNode","getOffset","getBoundingClientRect","getTransform","css","parseTransform","a","b","match","shift","item","Number","parseMatrix","transform","parseFloat","addClass","cls","classList","indexOf","add","split","cl","unitRE","RAD","Math","PI","DEG","recalcPoint","x","y","centerX","centerY","angle","newCenterX","newCenterY","oldCoords","getRotatedPoint","coords","nx","left","ny","top","resX","floatToFixed","resY","snapToGrid","snap","result","snapCandidate","gridSize","round","rotatedTopLeft","width","height","rotationAngle","revX","revY","cx","cy","dx","dy","rotatedTopLeftAngle","atan2","radius","sqrt","pow","cos","sin","ry","toPX","parent","test","fromPX","toUnit","getUnitDimension","toFixed","Subject","subject_classCallCheck","constructor","TypeError","storage","Ob","_onMouseDown","_onTouchStart","_onMouseMove","_onTouchMove","_onMouseUp","_onTouchEnd","_load","_init","remove","removeClass","_destroy","each","move","resize","rotate","_options$snap","_options$each","subscribe","drop","isFunc","e","ctx","animate","store","frame","doDraw","handle","handles","ch","cw","refang","pressang","pageX","pageY","center","parentScale","doDrag","doResize","doRotate","scaleX","scaleY","_store$each","moveEach","rotateEach","pos","is","br","mr","tl","ml","tr","tc","dox","doy","bl","bc","_resize","diffTop","diffLeft","_drag","notify","radians","_rotate","stopImmediatePropagation","computed","_compute","ctrlKey","shiftKey","keys","onRightEdge","onBottomEdge","onTopEdge","onLeftEdge","factor","rotator","_draw","preventDefault","action","_apply","_start","on","touches","_moving","guidLines","values","line","display","hieAllDuides","guidlines","_end","off","changedTouches","w","h","actionName","guidLinesConfig","stopDragX","tempPositionX","stopDragY","tempPositionY","normalizeX","normalizeY","newPositionX","newPositionY","Draggable","_this","html_classCallCheck","window","handleLayerLock","_possibleConstructorReturn","_getPrototypeOf","enable","wrapper","createElement","insertBefore","container","_parent","controls","querySelector","right","bottom","activeElement","coordinates","activeElementCoordinates","activeElementConfig","element","config","screenCenterX","body","clientWidth","screenCenterY","clientHeight","innerHTML","appendChild","_controls","_container","assign","verticalCoordinates","getArrayOfCoorditates","horizontalCoordinates","find","removeChild","processMove","processRotate","processResize","postMessage","_el","cached","dimens","matrix","_toConsumableArray","matrixToCSS","pW","pH","isTextDrag","contains","position","recalc","_this$storage","ctrls","tl_off","tr_off","styleList","parentTransform","coordX","coordY","locked","leftSide","rightSide","offset_","center_x","center_y","canResizeWithShiftKey","isText","scaleHeight","newHeight","offsetHeight","resultY","resultX","transformOrigin","size","props","elDrag","elDragContainer","elDragClient","floor","abs","activeElementClientRect","handleGuideLines","approxeq","numbers","controlNumber","epsilon","from","number","type","res","_ref2","_ref","_ref4","_ref3","linesConfig","elenentPositions","activeElemetPosition","coorditates","diffsX","diffsY","sides","centerElementSideX","topSide","bottomSide","centerElementSideY","_i","_Object$entries","entries","_Object$entries$_i","_slicedToArray","diffX","min","diffY","getGuidlinesConfig","linesCoordinates","resPosition","_i3","_Object$entries3","_Object$entries3$_i","stopDragHandlerX","_i4","_Object$entries4","_Object$entries4$_i","stopDragHandlerY","_i2","_Object$entries2","_Object$entries2$_i","parseInt","join","webkitTranform","mozTransform","msTransform","otransform","dRE","sepRE","parsePath","path","lastIndex","serialized","exec","cmd","upCmd","toUpperCase","relative","trim","isNaN","setCoord","diff","fixed","dist","setRelativeCoord","getFactor","ROT_OFFSET","floatRE","translateRE","DraggableSVG","svg_classCallCheck","svg_possibleConstructorReturn","svg_getPrototypeOf","createSVG","_sel$getBBox","getBBox","getAttribute","box","setAttribute","group","items","fill","stroke","createHandler","_this2","translate","_box$getBBox","newWidth","applyTransformToHandles","removeAttribute","els","tagName","toLowerCase","childNodes","attrs","resX1","resY1","resX2","resY2","parsePoints","str","firstCommand","movePath","applyTranslate","isGroup","bBox","boxX","boxY","boxW","boxH","fixedX","fixedY","baseData","_recalcPoint","svg_objectSpread","newR","_recalcPoint2","_recalcPoint3","rx","_recalcPoint4","_recalcPoint5","resX1_","resY1_","_recalcPoint6","resX2_","resY2_","_recalcPoint7","_values","path_slicedToArray","x_axis_rot","large_arc_flag","sweep_flag","factorX","factorY","newRx","newRy","_objectSpread","_values2","x1","y1","x2","y2","factorY1","factorX2","factorY2","resX3","resY3","_values3","_recalcPoint8","_values4","_recalcPoint9","_recalcPoint10","_values5","_recalcPoint11","_recalcPoint12","resizePath","attr","applyResize","_this$storage3","c_left","c_top","boxOffset","orig","_this$storage2","scale","_this$storage4","ptX","ptY","scaleString","oldTransform","_this$storage5","originTransform","transformString","newTransform","_this$storage6","hdl","createElementNS","halfWidth","halfHeight","boxAttrs","pts","reduce","array","js_classCallCheck","js_possibleConstructorReturn","js_getPrototypeOf","method","SVGElement","__webpack_exports__"],"mappings":"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","file":"js/subjx.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","export const requestAnimFrame = requestAnimationFrame ||\n        mozRequestAnimationFrame ||\n        webkitRequestAnimationFrame ||\n        msRequestAnimationFrame ||\n        function(f) {\n            return setTimeout(f, 1000 / 60);\n        };\n\nexport const cancelAnimFrame = cancelAnimationFrame ||\n        mozCancelAnimationFrame ||\n        function(requestID) {\n            clearTimeout(requestID);\n        };\n\nexport const forEach = Array.prototype.forEach,\n        arrSlice = Array.prototype.slice,\n        arrMap = Array.prototype.map,\n        warn = console.warn;\n\nexport function isDef(val) {\n    return val !== undefined && val !== null;\n}\n\nexport function isUndef(val) {\n    return val === undefined || val === null;\n}\n\nexport function isFunc(val) {\n    return typeof val === 'function';\n}","import { isUndef } from \"../util/util\";\n\nexport default class Observable {\n  \n    constructor() {\n        this.observers = {};\n    }\n  \n    subscribe(eventName, sub) {\n\n        const obs = this.observers;\n     \n        if (isUndef(obs[eventName])) {\n            Object.defineProperty(obs, eventName, {\n                value: []\n            });\n        }\n\n        obs[eventName].push(sub);\n    }\n  \n    unsubscribe(f) {\n       this.observers = this.observers.filter(subscriber => subscriber !== f);\n    }\n\n    notify(eventName, source, data) {\n        if (isUndef(this.observers[eventName])) return;\n\n        this.observers[eventName].forEach(observer => {\n            if (source === observer) return;\n            switch (eventName) {\n                case 'onmove':\n                    observer.onMove(data);\n                    break\n                case 'onrotate':\n                    observer.onRotate(data);\n                    break\n                case 'onresize':\n                    observer.onResize(data);\n                    break\n                case 'onapply':\n                    observer.onApply(data);\n                    break\n                case 'onrefreshstate':\n                    observer.onRefreshState(data);\n                    break\n                default: \n                    break\n            }\n        });\n    }\n}","import {\n    arrSlice,\n    warn\n} from './util/util'\n\nexport class Helper_ {\n\n    constructor(params) {\n\n        if (!params) return this;\n\n        if (typeof params === 'string') {\n            let selector = document.querySelectorAll(params);\n            this.length = selector.length;\n            for (let count = 0; count < this.length; count++) {\n                this[count] = selector[count];\n            }\n        } else if (params.nodeType === 1 || params === document) {\n            this[0] = params;\n            this.length = 1;\n        } else if (params instanceof Subjx || typeof params === 'object') {\n            this.length = params.length;\n            for (let count = 0; count < this.length; count++) {\n                this[count] = params[count];\n            }\n        } else if (Array.isArray(params)) {\n            this.length = 0;\n            for (let count = 0; count < this.length; count++) {\n                if (params.nodeType === 1) {\n                    this[count] = params[count];\n                    this.length++;\n                }\n            }\n        }\n        return this;\n    }\n\n    css(property) {\n        return _css.call(this, property);\n    }\n    find(node) {\n        return _find.call(this, node);\n    }\n    each(fn) {\n        return _each.call(this, fn);\n    }\n    on() {\n        return _on.apply(this, arguments);\n    }\n    off() {\n        return _off.apply(this, arguments);\n    }\n    is(selector) {\n        return _is.call(this, selector);\n    }\n}\n\nfunction _css(prop) {\n\n    const methods = {\n        setStyle(options) {\n            return _setStyle(this, options);\n        },\n\n        getStyle() {\n            return _getStyle(this);\n        }\n    };\n\n    if (typeof prop === 'string') {\n        return methods.getStyle.apply(this, arrSlice.call(arguments, 1));\n    } else if (typeof prop === 'object' || !prop) {\n        return methods.setStyle.apply(this, arguments);\n    } else {\n        warn(`Method ${prop} does not exist`);\n    }\n    return false;\n\n\n    function _getStyle(obj) {\n\n        let len = obj.length;\n\n        while (len--) {\n            if (obj[len].currentStyle) {\n                return obj[len].currentStyle[prop];\n            } else if (document.defaultView && document.defaultView.getComputedStyle) {\n                if (prop.includes('transform')) {\n                    const exponentRegexp180 = /-?1.22465e-16/g;\n                    const exponentRegexp90 = /6.12323e-17/g;\n                    return document.defaultView.getComputedStyle(obj[len], '')[prop].replace(exponentRegexp180, '0').replace(exponentRegexp90, '0');\n                }\n                return document.defaultView.getComputedStyle(obj[len], '')[prop];\n            } else {\n                return obj[len].style[prop];\n            }\n        }\n    }\n\n    function _setStyle(obj, options) {\n\n        let len = obj.length;\n\n        while (len--) {\n            for (let property in options) {\n                obj[len].style[property] = options[property];\n            }\n        }\n        return obj.style;\n    }\n}\n\nfunction _each(fn) {\n\n    const arr = arrSlice.call(this, 0);\n\n    for (let index = arr.length - 1; index >= 0; --index) {\n        let func = function() {\n            return arr[index];\n        };\n        fn.call(func());\n    }\n    return this;\n}\n\nfunction _find(sel) {\n\n    let len = this.length,\n        selector;\n\n    while (len--) {\n        selector = this[len].querySelectorAll(sel);\n        return Helper(selector);\n    }\n}\n\nfunction _on() {\n\n    let len = this.length;\n\n    while (len--) {\n\n        if (!this[len].events) {\n            this[len].events = {};\n            this[len].events[arguments[0]] = [];\n        }\n\n        if (arguments.length === 2) {\n\n            if (document.addEventListener) {\n                this[len].addEventListener(arguments[0], arguments[1], false);\n            } else if (document.attachEvent) {\n                this[len].attachEvent(`on${arguments[0]}`, arguments[1]);\n            } else {\n                this[len][`on${arguments[0]}`] = arguments[1];\n            }\n\n        } else if (arguments.length === 3 && typeof(arguments[1]) === 'string') {\n            listenerDelegate(this[len], arguments[0], arguments[1], arguments[2], true);\n        }\n    }\n    return this;\n}\n\nfunction _off() {\n\n    let len = this.length;\n\n    while (len--) {\n\n        if (!this[len].events) {\n            this[len].events = {};\n            this[len].events[arguments[0]] = [];\n        }\n\n        if (arguments.length === 2) {\n            if (document.removeEventListener) {\n                this[len].removeEventListener(arguments[0], arguments[1], false);\n            } else if (document.detachEvent) {\n                this[len].detachEvent(`on${arguments[0]}`, arguments[1]);\n            } else {\n                this[len][`on${arguments[0]}`] = null;\n            }\n\n        } else if (arguments.length === 3 && typeof(arguments[1]) === 'string') {\n            listenerDelegate(this[len], arguments[0], arguments[1], arguments[2], false);\n        }\n    }\n\n    return this;\n}\n\nfunction _is(selector) {\n\n    const _sel = Helper(selector);\n    let len = this.length;\n\n    while (len--) {\n        if (this[len] === _sel[len]) return true;\n    }\n    return false;\n}\n\nfunction listenerDelegate(el, evt, sel, handler, act) {\n\n    const doit = function(event) {\n        let t = event.target;\n        while (t && t !== this) {\n            if (t.matches(sel)) {\n                handler.call(t, event);\n            }\n            t = t.parentNode;\n        }\n    };\n\n    if (act === true) {\n        if (document.addEventListener) {\n            el.addEventListener(evt, doit, false);\n        } else if (document.attachEvent) {\n            el.attachEvent(`on${evt}`, doit);\n        } else {\n            el[`on${evt}`] = doit;\n        }\n    } else {\n        if (document.removeEventListener) {\n            el.removeEventListener(evt, doit, false);\n        } else if (document.detachEvent) {\n            el.detachEvent(`on${evt}`, doit);\n        } else {\n            el[`on${evt}`] = null;\n        }\n    }\n}\n\nexport function Helper(params) {\n    return new Helper_(params);\n}","export function getOffset(node) {\n    return node.getBoundingClientRect();\n}\n\nexport function getTransform(el) {\n    const transform = el.css('-webkit-transform') ||\n        el.css('-moz-transform') ||\n        el.css('-ms-transform') ||\n        el.css('-o-transform') ||\n        el.css('transform') ||\n        'none';\n    return transform;\n}\n\nexport function parseTransform(a) {\n    const b = {};\n\n    for (let i in a = a.match(/(\\w+\\((\\-?\\d+\\.?\\d*e?\\-?\\d*(?:,|\\s)?)+\\))+/g)) {\n        const c = a[i].match(/[\\w\\.\\-]+/g);\n        b[c.shift()] = c.map(item => { return Number(item); });\n    }\n    return b;\n}\n\nexport function parseMatrix(el) {\n    // matrix(scaleX(),skewY(),skewX(),scaleY(),translateX(),translateY())\n    const transform = getTransform(el).match(/-?\\d+\\.?\\d+|-?\\d+/g);\n\n    if (transform) {\n        return transform.map(item => {\n            return parseFloat(item);\n        });\n    } else {\n        return [1, 0, 0, 1, 0, 0];\n    }\n}\n\nexport function addClass(node, cls) {\n    if (!cls) return;\n\n    if (node.classList) {\n        if (cls.indexOf(' ') > -1) {\n            cls.split(/\\s+/).forEach(function(cl) {\n                return node.classList.add(cl);\n            });\n        } else {\n            return node.classList.add(cls);\n        }\n    }\n    return node;\n}\n\nexport function removeClass(node, cls) {\n    if (!cls) return;\n\n    if (node.classList) {\n        if (cls.indexOf(' ') > -1) {\n            cls.split(/\\s+/).forEach(function(cl) {\n                return node.classList.remove(cl);\n            });\n        } else {\n            return node.classList.remove(cls);\n        }\n    }\n    return node;\n}","export const unitRE = /px|em|%|ex|ch|rem|vh|vw|vmin|vmax|mm|cm|in|pt|pc|deg/;\nexport const RAD = Math.PI / 180;\nexport const DEG = 180 / Math.PI;\n\nexport function recalcPoint(params) {\n\n    const { \n        x, \n        y, \n        centerX,\n        centerY,\n        angle,\n        newCenterX,\n        newCenterY\n    } = params;\n\n    const oldCoords = getRotatedPoint(\n        centerX,\n        centerY,\n        x,\n        y,\n        angle,\n        false,\n        false\n    );\n\n    const coords = getRotatedPoint(\n        newCenterX,\n        newCenterY,\n        x,\n        y,\n        angle,\n        false,\n        false\n    );\n\n    const nx = x - (oldCoords.left - coords.left),\n        ny = y - (oldCoords.top - coords.top);\n\n    return {\n        resX: floatToFixed(nx),\n        resY: floatToFixed(ny)\n    }\n}\n\nexport function snapToGrid(value, snap) {\n    if (snap === 0) {\n        return value;\n    } else {\n        const result = snapCandidate(value, snap);\n\n        if (result - value < snap) {\n            return result;\n        }\n    }\n}\n\nexport function snapCandidate(value, gridSize) {\n    if (gridSize === 0) return value;\n    return gridSize * Math.round(value / gridSize);\n}\n\nexport function rotatedTopLeft(\n    x, \n    y, \n    width, \n    height, \n    rotationAngle, \n    revX, \n    revY\n) {\n\n    const cx = x + parseFloat(width) / 2,\n        cy = y + parseFloat(height) / 2;\n\n    const dx = x - cx,\n        dy = y - cy;\n\n    const originalTopLeftAngle = Math.atan2(dy, dx);\n\n    const rotatedTopLeftAngle = originalTopLeftAngle + rotationAngle;\n\n    const radius = Math.sqrt(Math.pow(parseFloat(width) / 2, 2) + Math.pow(parseFloat(height) / 2, 2));\n            \n    let cos = Math.cos(rotatedTopLeftAngle), \n        sin = Math.sin(rotatedTopLeftAngle);\n\n    cos = revX === true ? -cos : cos;\n    sin = revY === true ? -sin : sin;\n\n    const rx = cx + radius * cos,\n        ry = cy + radius * sin;\n\n    return {\n        left: floatToFixed(rx),\n        top: floatToFixed(ry)\n    }\n}\n\nexport function getRotatedPoint(\n    cx, \n    cy, \n    x, \n    y, \n    angle, \n    revX, \n    revY\n) {\n\n    let cos = Math.cos(angle),\n        sin = Math.sin(angle);\n\n    cos = revX === true ? -cos : cos;\n    sin = revY === true ? -sin : sin;\n\n    let nx = (cos * (x - cx)) + (sin * (y - cy)) + cx,\n        ny = (cos * (y - cy)) - (sin * (x - cx)) + cy;\n\n    return {\n        left: floatToFixed(nx),\n        top: floatToFixed(ny)\n    }\n}\n\nexport function toPX(value, parent) {\n    if (/px/.test(value)) {\n        return value;\n    }\n    if (/%/.test(value)) {\n        return `${parseFloat(value) * parseFloat(parent) / 100}px`;\n    }\n}\n\nexport function fromPX(value, parent, toUnit) {\n    if (/px/.test(toUnit)) {\n        return value;\n    }\n    if (/%/.test(toUnit)) {\n        return `${parseFloat(value) * 100 / parseFloat(parent)}%`;\n    }\n}\n\nexport function getUnitDimension(value) {\n    return value.match(unitRE)[0];\n}\n\nexport function floatToFixed(val) {\n    return Number(val.toFixed(6));\n}\n","import { Helper } from '../helper'\n\nimport {\n    requestAnimFrame,\n    cancelAnimFrame,\n    isDef,\n    isUndef,\n    isFunc\n} from '../util/util'\n\nimport {\n    addClass,\n    removeClass\n} from '../util/css-util'\n\nimport {\n    getRotatedPoint,\n    RAD\n} from './common'\n\nexport default class Subject {\n    \n    constructor(el, Observable) {\n        \n        if (this.constructor === Subject) {\n            throw new TypeError('Cannot construct Subject instances directly');\n        }\n        \n        this.el = el;\n        this.storage = null;\n        this.Ob = Observable;\n        \n        this._onMouseDown = this._onMouseDown.bind(this);\n        this._onTouchStart = this._onTouchStart.bind(this);\n        this._onMouseMove = this._onMouseMove.bind(this);\n        this._onTouchMove = this._onTouchMove.bind(this);\n        this._onMouseUp = this._onMouseUp.bind(this);\n        this._onTouchEnd = this._onTouchEnd.bind(this);\n    }\n    \n    enable(options) {\n        \n        if (isUndef(this.storage)) {\n            this._load(options);\n            this._init(this.el);\n        } else {\n            warn('Already enabled');\n        }\n    }\n    \n    disable() {\n        const {\n            storage,\n            el\n        } = this;\n        \n        if (isUndef(storage)) return;\n        \n        removeClass(el, 'dg-drag');\n        this._destroy();\n        \n        delete this.storage;\n    }\n    \n    _load(options) {\n        loadOptions.call(this, options);\n    }\n    \n    _draw() {\n        \n        const ctx = this;\n        \n        \n        function animate() {\n            const store = ctx.storage;\n            \n            store.frame = requestAnimFrame(animate);\n            \n            if (!store.doDraw) return;\n            store.doDraw = false;\n            \n            let {\n                handle,\n                handles,\n                cx,\n                cy,\n                ch,\n                cw,\n                refang,\n                pressang,\n                pageX,\n                pageY,\n                center,\n                snap,\n                parentScale,\n                doDrag,\n                doResize,\n                doRotate\n            } = store;\n            \n            const scaleX = parentScale[0],\n              scaleY = parentScale[1];\n            \n            let {\n                move: moveEach,\n                resize: resizeEach,\n                rotate: rotateEach\n            } = store.each;\n            \n            if (doResize) {\n                \n                let revX, revY, x, y, pos;\n                \n                let width = null,\n                  height = null;\n                \n                if (handle.is(handles.br) || handle.is(handles.mr)) {\n                    pos = getRotatedPoint(\n                      cx,\n                      cy,\n                      pageX,\n                      pageY,\n                      refang,\n                      false,\n                      false\n                    );\n                    pageY = pos.top;\n                    pageX = pos.left;\n                    \n                    y = (pageY - cy) / scaleY;\n                    x = (pageX - cx) / scaleX;\n                    \n                    let doy = handle.is(handles.br);\n                    \n                    if (doy) { height = y + ch; }\n                    width = x + cw;\n                    \n                    revX = false;\n                    revY = false;\n                    \n                } else if (handle.is(handles.tl) || handle.is(handles.ml)) {\n                    \n                    pos = getRotatedPoint(\n                      cx,\n                      cy,\n                      pageX,\n                      pageY,\n                      refang,\n                      false,\n                      false\n                    );\n                    pageY = pos.top;\n                    pageX = pos.left;\n                    \n                    y = - (pageY - cy) / scaleY;\n                    x = - (pageX - cx) / scaleX;\n                    \n                    let doy = handle.is(handles.tl);\n                    \n                    width = x + cw;\n                    if (doy) { height = y + ch; }\n                    \n                    revX = true;\n                    revY = true;\n                    \n                } else if (handle.is(handles.tr) || handle.is(handles.tc)) {\n                    \n                    let dox = handle.is(handles.tr);\n                    let doy = handle.is(handles.tc);\n                    \n                    pos = getRotatedPoint(\n                      cx,\n                      cy,\n                      pageX,\n                      pageY,\n                      refang,\n                      dox,\n                      false\n                    );\n                    \n                    pageY = pos.top;\n                    pageX = pos.left;\n                    \n                    y = - (pageY - cy) / scaleY;\n                    x = - (pageX - cx) / scaleX;\n                    \n                    if (dox) { y = -y; }\n                    \n                    height = y + ch;\n                    if (dox) { width = x + cw; }\n                    \n                    revX = doy;\n                    revY = true;\n                    \n                } else if (handle.is(handles.bl) || handle.is(handles.bc)) {\n                    \n                    let dox = handle.is(handles.bl);\n                    \n                    pos = getRotatedPoint(\n                      cx,\n                      cy,\n                      pageX,\n                      pageY,\n                      refang,\n                      false,\n                      dox\n                    );\n                    \n                    pageY = pos.top;\n                    pageX = pos.left;\n                    \n                    y = (pageY - cy) / scaleY;\n                    x = - (pageX - cx) / scaleX;\n                    \n                    height = y + ch;\n                    if (dox) { width = x + cw; }\n                    revX = dox;\n                    \n                    revY = false;\n                }\n                \n                \n                ctx._resize(\n                  width,\n                  height,\n                  revX,\n                  revY,\n                  x,\n                  y\n                );\n                \n                \n            }\n            \n            if (doDrag) {\n                \n                const diffTop = (pageY - cy) / scaleY,\n                  diffLeft = (pageX - cx) / scaleX;\n                \n                ctx._drag(\n                  diffTop,\n                  diffLeft,\n                );\n                \n                if (moveEach) {\n                    ctx.Ob.notify('onmove',\n                      ctx,\n                      {\n                          diffTop,\n                          diffLeft\n                      }\n                    );\n                }\n            }\n            \n            if (doRotate) {\n                \n                const radians = Math.atan2(\n                  pageY - center.y,\n                  pageX - center.x\n                ) - pressang;\n                \n                ctx._rotate(\n                  radians\n                );\n                \n                if (rotateEach) {\n                    ctx.Ob.notify('onrotate',\n                      ctx,\n                      {\n                          radians\n                      }\n                    );\n                }\n            }\n        }\n        animate();\n    }\n    \n    _start(e) {\n        \n        if (e.stopImmediatePropagation) {\n            e.stopImmediatePropagation();\n        }\n        \n        const store = this.storage;\n        const computed = this._compute(e);\n        \n        store.pageX = e.pageX;\n        store.pageY = e.pageY;\n        store.cx = e.pageX;\n        store.cy = e.pageY;\n        store.ctrlKey = e.ctrlKey;\n        store.shiftKey = e.shiftKey;\n        \n        Object.keys(computed).forEach(prop => {\n            store[prop] = computed[prop];\n        });\n        \n        const {\n            onRightEdge,\n            onBottomEdge,\n            onTopEdge,\n            onLeftEdge,\n            handle,\n            factor,\n            revX,\n            revY\n        } = computed;\n        \n        const doResize = onRightEdge ||\n          onBottomEdge ||\n          onTopEdge ||\n          onLeftEdge;\n        \n        const doRotate = handle.is(store.handles.rotator);\n        \n        store.doResize = doResize;\n        store.doDrag = !doRotate && !doResize;\n        store.doRotate = doRotate;\n        \n        if (this.Ob) {\n            this.Ob.notify(\n              'onrefreshstate',\n              this,\n              {\n                  factor,\n                  revX,\n                  revY,\n                  onTopEdge,\n                  onLeftEdge,\n                  onRightEdge,\n                  onBottomEdge\n              }\n            );\n        }\n        \n        this._draw();\n    }\n    \n    _moving(e) {\n        \n        if (e.preventDefault) {\n            e.preventDefault();\n        }\n        \n        const store = this.storage;\n        store.pageX = e.pageX;\n        store.pageY = e.pageY;\n        store.doDraw = true;\n    }\n    \n    _end(e) {\n        \n        if (e.stopImmediatePropagation) {\n            e.stopImmediatePropagation();\n        }\n        \n        const store = this.storage;\n        \n        const action = store.doResize ? 'resize' : (store.doDrag ? 'drag' : 'rotate');\n        \n        store.doResize = false;\n        store.doDrag = false;\n        store.doRotate = false;\n        store.doDraw = false;\n        \n        this._apply(action);\n        \n        if (this.Ob) {\n            this.Ob.notify(\n              'onapply',\n              this,\n              action\n            );\n        }\n        \n        cancelAnimFrame(store.frame);\n        store.drop.call(this, e);\n    }\n    \n    _onMouseDown(e) {\n        this._start(e);\n        Helper(document).on('mousemove', this._onMouseMove)\n          .on('mouseup', this._onMouseUp);\n    }\n    \n    _onTouchStart(e) {\n        this._start(e.touches[0]);\n        Helper(document).on('touchmove', this._onTouchMove)\n          .on('touchend', this._onTouchEnd);\n    }\n    \n    _onMouseMove(e) {\n        this._moving(e, this.el);\n    }\n    \n    _onTouchMove(e) {\n        this._moving(e.touches[0], this.el);\n    }\n    \n    _onMouseUp(e) {\n        hieAllDuides(this.storage.guidlines);\n        this._end(e, this.el);\n        Helper(document).off('mousemove', this._onMouseMove)\n          .off('mouseup', this._onMouseUp);\n    }\n    \n    _onTouchEnd(e) {\n        if (e.touches.length === 0) {\n            this._end(e.changedTouches[0], this.el);\n        }\n        Helper(document).off('touchmove', this._onTouchMove)\n          .off('touchend', this._onTouchEnd);\n    }\n    \n    onMove(data) {\n        \n        this._drag(\n          data.diffTop,\n          data.diffLeft\n        );\n    }\n    \n    onRotate(data) {\n        \n        this._rotate(\n          data.radians\n        );\n    }\n    \n    onResize(data) {\n        \n        const w = data.width !== null ? this.storage.cw + data.x : null;\n        const h = data.height !== null ? this.storage.ch + data.y : null;\n        \n        this._resize(\n          w,\n          h,\n          data.revX,\n          data.revY\n        );\n    }\n    \n    onApply(actionName) {\n        this._apply(actionName);\n    }\n}\n\nfunction hieAllDuides (guidLines) {\n    Object.values(guidLines).forEach(line => {\n        if (line) {\n            line.style.display = 'none';\n        }\n    })\n}\n\nfunction loadOptions(options) {\n    \n    addClass(this.el, 'dg-drag');\n    \n    let snap = {\n        x: 10,\n        y: 10,\n        angle: 10 * RAD\n    };\n    \n    let each = {\n        move: false,\n        resize: false,\n        rotate: false\n    }\n    \n    if (isDef(options)) {\n        \n        if (isDef(options.snap)) {\n            \n            const { x, y, angle } = options.snap;\n            \n            snap.x = isUndef(x) ? 10 : x;\n            snap.y = isUndef(y) ? 10 : y;\n            snap.angle = isUndef(angle) ? 1 * RAD : angle * RAD;\n        }\n        \n        if (isDef(options.each)) {\n            \n            const { move, resize, rotate } = options.each;\n            \n            each.move = move || false;\n            each.resize = resize || false;\n            each.rotate = rotate || false;\n        }\n    }\n    \n    const Ob = this.Ob;\n    \n    if (each.move || each.resize || each.rotate) {\n        Ob.subscribe('onrefreshstate', this);\n        Ob.subscribe('onapply', this);\n    }\n    \n    if (each.move) {\n        Ob.subscribe('onmove', this);\n    }\n    if (each.resize) {\n        Ob.subscribe('onresize', this);\n    }\n    if (each.rotate) {\n        Ob.subscribe('onrotate', this);\n    }\n    \n    this.storage = {\n        drop: options && isFunc(options.drop)\n          ? function(e) {\n              options.drop(e, this.el);\n          }\n          : function() {},\n        snap,\n        each\n    };\n}\n","import { Helper } from '../helper'\nimport Subject from './subject'\n\nimport {\n    addClass,\n    getTransform,\n    parseMatrix,\n    getOffset\n} from '../util/css-util'\n\nimport {\n    snapToGrid,\n    snapCandidate,\n    rotatedTopLeft,\n    toPX,\n    fromPX,\n    getUnitDimension,\n    floatToFixed, getRotatedPoint\n} from './common'\n\nconst brackets = '<div class=\"dg-hdl dg-rotator\"></div>\\\n        <div class=\"dg-hdl dg-hdl-t dg-hdl-l dg-hdl-tl\"></div>\\\n        <div class=\"dg-hdl dg-hdl-t dg-hdl-r dg-hdl-tr\"></div>\\\n        <div class=\"dg-hdl dg-hdl-b dg-hdl-r dg-hdl-br\"></div>\\\n        <div class=\"dg-hdl dg-hdl-b dg-hdl-l dg-hdl-bl\"></div>\\\n        <div class=\"dg-hdl dg-hdl-t dg-hdl-c dg-hdl-tc\"></div>\\\n        <div class=\"dg-hdl dg-hdl-b dg-hdl-c dg-hdl-bc\"></div>\\\n        <div class=\"dg-hdl dg-hdl-m dg-hdl-l dg-hdl-ml\"></div>\\\n        <div class=\"dg-hdl dg-hdl-m dg-hdl-r dg-hdl-mr\"></div>';\n\nconst guidLinesConfig = {\n    stopDragX: false,\n    tempPositionX: 0,\n    stopDragY: false,\n    tempPositionY: 0,\n    normalizeX: 0,\n    normalizeY: 0,\n    newPositionX: 0,\n    newPositionY: 0\n}\n\nexport default class Draggable extends Subject {\n    \n    constructor(el, options, Observable) {\n        \n        window.parent.addEventListener('message', handleLayerLock)\n        super(el, Observable);\n        this.enable(options);\n    }\n    \n    _init(item, options) {\n        _init.call(this, item, options);\n    }\n    \n    _destroy(item) {\n        _destroy.call(this, item);\n    }\n    \n    _drag() {\n        processMove.call(this, ...arguments);\n    }\n    \n    _rotate() {\n        processRotate.call(this, ...arguments);\n    }\n    \n    _resize() {\n        processResize.call(this, ...arguments);\n    }\n    \n    _compute() {\n        return _compute.call(this, ...arguments);\n    }\n    \n    _apply() {\n        window.parent.postMessage({ event: 'apply-from-iframe' }, 'http://127.0.0.1:3978/#/edit');\n        const {\n            storage,\n            el\n        } = this;\n        \n        const _el = Helper(el);\n        \n        const {\n            cached,\n            parent,\n            dimens,\n            handle,\n            controls\n        } = storage;\n        \n        if (!cached) return;\n        \n        const matrix = [...cached];\n        \n        const diffLeft = matrix[4];\n        const diffTop = matrix[5];\n        \n        // matrix[4] = 0;\n        // matrix[5] = 0;\n        \n        const css = matrixToCSS(matrix);\n        \n        const pW = parent.css('width'),\n          pH = parent.css('height');\n        \n        const left = parseFloat(\n          toPX(_el.css('left'), pW)\n        );\n        const top = parseFloat(\n          toPX(_el.css('top'), pH)\n        );\n        \n        css.left = fromPX(\n          left + diffLeft + 'px',\n          pW,\n          dimens.left\n        );\n        \n        css.top = fromPX(\n          top + diffTop + 'px',\n          pH,\n          dimens.top\n        );\n        \n        const container = el.querySelector('.text-container');\n        const isTextDrag = handle[0].classList.contains('dg-controls') || !container || (!handle[0].classList.contains('dg-hdl-ml') && !handle[0].classList.contains('dg-hdl-mr'))\n        \n        window.parent.postMessage({\n            event: 'resize-on-mouseup', position: {\n                width: controls.style.width,\n                height: controls.style.height,\n                diffLeft,\n                diffTop\n            },\n            isTextDrag: isTextDrag\n        }, 'http://127.0.0.1:3978/#/edit');\n        this.storage.cached = null;\n    }\n    \n    onRefreshState(data) {\n        const store = this.storage;\n        \n        const recalc = refreshState.call(this,\n          data.factor,\n          data.revX,\n          data.revY\n        );\n        \n        Object.keys(recalc).forEach(key => {\n            store[key] = recalc[key];\n        });\n    }\n}\n\nlet locked = true;\nlet dissableX = false;\nlet dissableY = false;\nlet savedLeft = 0;\nlet savedTop = 0;\nlet normalizeX = false;\nfunction handleLayerLock (event) {\n    if (event.data.event === 'set-lock-settings') {\n        locked = event.data.locked;\n    }\n}\n\nfunction _init(sel) {\n    const wrapper = document.createElement('div');\n    \n    addClass(wrapper, 'dg-wrapper');\n    sel.parentNode.insertBefore(wrapper, sel);\n    \n    const container = wrapper;\n    const _sel = Helper(sel);\n    \n    const w = _sel.css('width'),\n      h = _sel.css('height'),\n      t = _sel.css('top'),\n      l = _sel.css('left');\n    \n    const _parent = Helper(container.parentNode);\n    const css = {\n        top: t,\n        left: l,\n        width: toPX(w, _parent.css('width')),\n        height: toPX(h, _parent.css('height')),\n        transform: getTransform(_sel)\n    };\n    \n    const controls = document.createElement('div');\n    const guidlines = {\n        centerX: document.querySelector('.guid-line.guid-line-y.guid-center-y'),\n        centerY: document.querySelector('.guid-line.guid-line-x.guid-center-x'),\n        left: document.querySelector('.guid-line.guid-line-y.guid-left'),\n        right: document.querySelector('.guid-line.guid-line-y.guid-right'),\n        top: document.querySelector('.guid-line.guid-line-x.guid-top'),\n        bottom: document.querySelector('.guid-line.guid-line-x.guid-bottom')\n    }\n    let activeElement = document.querySelector('.dg-wrapper + .drag-item-content');\n    if (!activeElement) {\n        activeElement = document.querySelector('.drag-item-content');\n    }\n    let coordinates = [];\n    let activeElementCoordinates = {};\n    const activeElementConfig = activeElement.getBoundingClientRect();\n    coordinates = [].map.call(document.querySelectorAll('.drag-item-content'), element => {\n        if (activeElement !== element) {\n            const config = element.getBoundingClientRect();\n            return {\n                left: config.left,\n                top: config.top,\n                right: config.right,\n                bottom: config.bottom,\n                centerX: config.left + config.width / 2,\n                centerY: config.top + config.height / 2\n            }\n        }\n    }).filter(config => config);\n    activeElementCoordinates = {\n        left: activeElementConfig.left,\n        top: activeElementConfig.top,\n        right: activeElementConfig.right,\n        bottom: activeElementConfig.bottom,\n        centerX: activeElementConfig.left + activeElementConfig.width / 2,\n        centerY: activeElementConfig.top + activeElementConfig.height / 2\n    }\n    const screenCenterX = document.body.clientWidth / 2;\n    const screenCenterY = document.body.clientHeight / 2;\n    controls.innerHTML = brackets;\n    \n    addClass(controls, 'dg-controls');\n    \n    container.appendChild(controls);\n    \n    const _controls = Helper(controls);\n    _controls.css(css);\n    \n    const _container = Helper(container);\n    Object.assign(this.storage, {\n        controls: controls,\n        guidlines: guidlines,\n        coordinates: coordinates,\n        screenCenterX: screenCenterX,\n        screenCenterY: screenCenterY,\n        verticalCoordinates: getArrayOfCoorditates(coordinates, screenCenterX, 'left'),\n        horizontalCoordinates: getArrayOfCoorditates(coordinates, screenCenterY, 'top'),\n        activeElementCoordinates: activeElementCoordinates,\n        activeElement: activeElement,\n        handles: {\n            tl: _container.find('.dg-hdl-tl'),\n            tr: _container.find('.dg-hdl-tr'),\n            br: _container.find('.dg-hdl-br'),\n            bl: _container.find('.dg-hdl-bl'),\n            tc: _container.find('.dg-hdl-tc'),\n            bc: _container.find('.dg-hdl-bc'),\n            ml: _container.find('.dg-hdl-ml'),\n            mr: _container.find('.dg-hdl-mr'),\n            rotator: _container.find('.dg-rotator')\n        },\n        parent: _parent\n    });\n    _controls.on('mousedown', this._onMouseDown)\n      .on('touchstart', this._onTouchStart);\n    const textContainer = _sel[0].querySelector('.text-container');\n    if (textContainer) {\n        _container.find('.dg-hdl-bc')[0].style.display = 'none';\n        _container.find('.dg-hdl-tc')[0].style.display = 'none';\n    }\n}\n\nfunction _destroy() {\n    window.parent.removeEventListener(handleLayerLock)\n    const { controls } = this.storage;\n    \n    Helper(controls).off('mousedown', this._onMouseDown)\n      .off('touchstart', this._onTouchStart);\n    \n    this.el.parentNode.removeChild(controls.parentNode);\n}\n\nfunction _compute(e) {\n    guidLinesConfig.stopDragX = false;\n    guidLinesConfig.stopDragY = false;\n    guidLinesConfig.tempPositionX = 0;\n    guidLinesConfig.tempPositionY = 0;\n    guidLinesConfig.normalizeX = 0;\n    guidLinesConfig.newPositionX = 0;\n    guidLinesConfig.newPositionY = 0;\n    guidLinesConfig.tempPositionX = 0;\n    guidLinesConfig.tempPositionY = 0;\n    window.parent.postMessage({ event: 'compute-from-iframe' }, 'http://127.0.0.1:3978/#/edit');\n    const {\n        el,\n        storage\n    } = this;\n    \n    const {\n        handles,\n        controls: ctrls,\n        parent,\n        snap\n    } = storage;\n    \n    const handle = Helper(e.target);\n    const container = el.querySelector('.text-container');\n    const leftSide = handle[0].classList.contains('dg-hdl-ml');\n    const rightSide = handle[0].classList.contains('dg-hdl-mr');\n    if (container && !leftSide && !rightSide) {\n        container.style.width = `${el.clientWidth}px`;\n    }\n    let factor = 1;\n    \n    //reverse axis\n    const revX = handle.is(handles.tl) ||\n      handle.is(handles.ml) ||\n      handle.is(handles.bl) ||\n      handle.is(handles.tc);\n    \n    const revY = handle.is(handles.tl) ||\n      handle.is(handles.tr) ||\n      handle.is(handles.tc) ||\n      handle.is(handles.ml);\n    \n    //reverse angle\n    if (handle.is(handles.tr) ||\n      handle.is(handles.bl)\n    ) {\n        factor = -1;\n    }\n    \n    const tl_off = getOffset(handles.tl[0]),\n      tr_off = getOffset(handles.tr[0]);\n    \n    const refang = Math.atan2(\n      tr_off.top - tl_off.top,\n      tr_off.left - tl_off.left\n    ) * factor;\n    \n    const cw = parseFloat(\n      toPX(ctrls.style.width, parent.css('width'))\n    );\n    const ch = parseFloat(\n      toPX(ctrls.style.height, parent.css('height'))\n    );\n    \n    const transform = parseMatrix(Helper(ctrls));\n    //getting current coordinates considering rotation angle\n    const coords = rotatedTopLeft(\n      transform[4],\n      transform[5],\n      cw,\n      ch,\n      refang,\n      revX,\n      revY\n    );\n    const offset_ = getOffset(ctrls);\n    \n    const center_x = offset_.left + cw / 2,\n      center_y = offset_.top + ch / 2;\n    \n    const pressang = Math.atan2(\n      e.pageY - center_y,\n      e.pageX - center_x\n    );\n    \n    const _el = Helper(el);\n    const styleList = el.style;\n    \n    const dimens = {\n        top: getUnitDimension(styleList.top || _el.css('top')),\n        left: getUnitDimension(styleList.left || _el.css('left')),\n        width: getUnitDimension(styleList.width || _el.css('width')),\n        height: getUnitDimension(styleList.height || _el.css('height'))\n    };\n    \n    const parentTransform = parseMatrix(parent);\n    \n    return {\n        parentScale: [parentTransform[0], parentTransform[3]],\n        transform,\n        cw,\n        ch,\n        center: {\n            x: center_x,\n            y: center_y\n        },\n        left: snapCandidate(transform[4], snap.x),\n        top: snapCandidate(transform[5], snap.y),\n        coordY: coords.top,\n        coordX: coords.left,\n        factor,\n        pressang,\n        refang,\n        revX,\n        revY,\n        handle,\n        onTopEdge: handle.is(handles.tl) || handle.is(handles.tc) || handle.is(handles.tr),\n        onLeftEdge: handle.is(handles.tl) || handle.is(handles.ml) || handle.is(handles.bl),\n        onRightEdge: handle.is(handles.tr) || handle.is(handles.mr) || handle.is(handles.br),\n        onBottomEdge: handle.is(handles.br) || handle.is(handles.bc) || handle.is(handles.bl),\n        dimens\n    }\n}\n\nfunction refreshState(factor, revX, revY) {\n    \n    const {\n        controls: ctrls,\n        handles,\n        parent,\n        snap\n    } = this.storage;\n    \n    const tl_off = getOffset(handles.tl[0]),\n      tr_off = getOffset(handles.tr[0]);\n    \n    const refang = Math.atan2(\n      tr_off.top - tl_off.top,\n      tr_off.left - tl_off.left\n    ) * factor;\n    \n    const cw = parseFloat(\n      toPX(ctrls.style.width, parent.css('width'))\n    );\n    const ch = parseFloat(\n      toPX(ctrls.style.height, parent.css('height'))\n    );\n    \n    const transform = parseMatrix(Helper(ctrls));\n    \n    //getting current coordinates considering rotation angle\n    const coords = rotatedTopLeft(\n      transform[4],\n      transform[5],\n      cw,\n      ch,\n      refang,\n      revX,\n      revY\n    );\n    \n    const _sel = Helper(this.el);\n    const styleList = this.el.style;\n    return {\n        transform: transform,\n        parentTransform: parseMatrix(parent),\n        left: snapCandidate(transform[4], snap.x),\n        top: snapCandidate(transform[5], snap.y),\n        coordX: coords.left,\n        coordY: coords.top,\n        refang: refang,\n        cw: cw,\n        ch: ch,\n        dimens: {\n            top: getUnitDimension(styleList.top || _sel.css('top')),\n            left: getUnitDimension(styleList.left || _sel.css('left')),\n            width: getUnitDimension(styleList.width || _sel.css('width')),\n            height: getUnitDimension(styleList.height || _sel.css('height'))\n        }\n    }\n}\n\nfunction processResize(\n  width,\n  height,\n  revX,\n  revY\n) {\n    \n    const {\n        el,\n        storage\n    } = this;\n    \n    const {\n        controls,\n        handle,\n        snap,\n        left,\n        top,\n        coordX,\n        coordY,\n        refang,\n        dimens,\n        parent,\n        transform\n    } = storage;\n    \n    \n    const { style } = controls;\n    \n    if (width !== null) {\n        style.width = `${snapToGrid(width, snap.x)}px`;\n    }\n    \n    const canResizeWithShiftKey = handle[0].classList.contains('dg-hdl-br') ||\n      handle[0].classList.contains('dg-hdl-tr') ||\n      handle[0].classList.contains('dg-hdl-bl') ||\n      handle[0].classList.contains('dg-hdl-tl');\n    let isText = false;\n    const container = el.querySelector('.text-container');\n    if (container && canResizeWithShiftKey) {\n        isText = true;\n    }\n    const scaleHeight = storage.ch / storage.cw;\n    if (height !== null) {\n        if (((!storage.shiftKey && locked) || isText) && canResizeWithShiftKey) {\n            height = width * scaleHeight;\n        }\n        style.height = `${snapToGrid(height, snap.y)}px`;\n    }\n    \n    if (container && (handle[0].classList.contains('dg-hdl-mr') || handle[0].classList.contains('dg-hdl-ml'))) {\n        let newHeight = 0;\n        [].forEach.call(container.querySelectorAll('.simple-text-line'), (el) => {\n            newHeight += el.clientHeight || el.offsetHeight;\n        })\n        style.height = !newHeight ? `${snapToGrid(container.parentNode.clientHeight, snap.y)}px` : `${snapToGrid(newHeight, snap.y)}px`;\n    }\n    \n    const coords = rotatedTopLeft(\n      left,\n      top,\n      style.width,\n      style.height,\n      refang,\n      revX,\n      revY\n    );\n    let resultY = top - (coords.top - coordY);\n    let resultX = left - (coords.left - coordX);\n    \n    const matrix = [...transform];\n    \n    if (isText) {\n        container.style.transformOrigin = `top left`;\n        container.style.transform = `scale(${parseFloat(style.width) / storage.cw})`;\n    }\n    matrix[4] = resultX;\n    matrix[5] = resultY;\n    \n    const css = matrixToCSS(matrix);\n    \n    Helper(controls).css(css);\n    \n    \n    css.width = fromPX(\n      style.width,\n      parent.css('width'),\n      dimens.width\n    );\n    \n    css.height = fromPX(\n      style.height,\n      parent.css('height'),\n      dimens.height\n    );\n    \n    const size = {\n        width: css.width,\n        height: css.height,\n    }\n    \n    \n    Helper(el).css(css);\n    window.parent.postMessage({ event: 'resize-from-package', size: size, isText: isText }, 'http://127.0.0.1:3978/#/edit');\n    storage.cached = matrix;\n}\nlet normalizeValue = 0;\nfunction processMove(\n  top,\n  left\n) {\n    const {\n        el,\n        storage\n    } = this;\n    const {\n        controls,\n        transform,\n        snap\n    } = storage;\n    \n    const matrix = [...transform];\n    \n    const props = {\n        elDrag: el,\n        elDragContainer: document.querySelector('body')\n    }\n    if (props.elDrag.name && props.elDrag.name.match('fullscreen')) {\n        props.elDragClient = {\n            left: Math.floor(+props.elDrag.name.split('/')[1]),\n            right: Math.floor(+props.elDrag.name.split('/')[2]),\n            top: Math.floor(+props.elDrag.name.split('/')[3]),\n            bottom: Math.floor(+props.elDrag.name.split('/')[4])\n        }\n        if (props.elDragClient.left || Math.abs(Math.floor(props.elDragClient.right + 2)) - Math.floor(props.elDragContainer.clientWidth)) {\n            if (left > 0 && props.elDragClient.left) {\n                // need to optimize this\n                if (Math.abs(props.elDragClient.left) > Math.abs(left)) {\n                    matrix[4] = snapToGrid(transform[4] + Math.floor(left), snap.x);\n                } else {\n                    matrix[4] = snapToGrid(transform[4] + Math.abs(props.elDragClient.left), snap.x);\n                }\n            } else if (left <= 0 && Math.floor(props.elDragClient.right - 2) - Math.floor(props.elDragContainer.clientWidth)) {\n                if ((Math.abs(Math.floor(props.elDragClient.right)) - Math.floor(props.elDragContainer.clientWidth)) - Math.abs(left) > 0) {\n                    matrix[4] = snapToGrid(transform[4] + left, snap.x);\n                } else {\n                    matrix[4] = snapToGrid(transform[4] - (Math.abs(Math.floor(props.elDragClient.right)) - Math.floor(props.elDragContainer.clientWidth)), snap.x);\n                }\n            }\n        }\n        if (props.elDragClient.top) {\n            if (top > 0 && props.elDragClient.top) {\n                // need to optimize this\n                if (Math.abs(props.elDragClient.top) > Math.abs(top)) {\n                    matrix[5] = snapToGrid(transform[5] + Math.floor(top), snap.y);\n                } else {\n                    matrix[5] = snapToGrid(transform[5] + (Math.abs(props.elDragClient.top)), snap.y);\n                }\n            } else if (left <= 0 && Math.floor(props.elDragClient.bottom - 2) - Math.floor(props.elDragContainer.clientHeight)) {\n                if ((Math.abs(Math.floor(props.elDragClient.bottom)) - Math.floor(props.elDragContainer.clientHeight)) - Math.abs(top) > 0) {\n                    matrix[5] = snapToGrid(transform[5] + top, snap.y);\n                } else {\n                    matrix[5] = snapToGrid(transform[5] - (Math.abs(Math.floor(props.elDragClient.bottom)) - Math.floor(props.elDragContainer.clientHeight)), snap.y);\n                }\n            }\n        }\n        \n    } else {\n        const activeElementClientRect = storage.activeElement.getBoundingClientRect();\n        const activeElementConfig = {\n            left: activeElementClientRect.left,\n            top: activeElementClientRect.top,\n            right: activeElementClientRect.right,\n            bottom: activeElementClientRect.bottom,\n            centerX: activeElementClientRect.left + activeElementClientRect.width / 2,\n            centerY: activeElementClientRect.top + activeElementClientRect.height / 2\n        };\n        matrix[4] = snapToGrid(transform[4] + handleGuideLines(storage, left, activeElementConfig, 'left'), snap.x);\n        // matrix[4] = snapToGrid(transform[4] + left, snap.x);\n        matrix[5] = snapToGrid(transform[5] + handleGuideLines(storage, top, activeElementConfig, 'top'), snap.y);\n        // matrix[5] = snapToGrid(transform[5] + top, snap.y);\n    }\n    const css = matrixToCSS(matrix);\n    Helper(controls).css(css);\n    Helper(el).css(css);\n    storage.cached = matrix;\n}\n\n\nconst vertivalConfigFields = ['left', 'right', 'centerX']\nconst horizontalConfigFields = ['top', 'bottom', 'centerY']\n\nlet tmp = 0;\nlet stopDrag = false;\n\n\n\n// GUIDLINES\nfunction approxeq(numbers, controlNumber, epsilon) {\n    if (epsilon == null) {\n        epsilon = 5;\n    }\n    return Array.from(numbers).find(number => Math.abs(number - controlNumber) < epsilon)\n};\n\nfunction getGuidlinesConfig(elenentPositions, activeElemetPosition, screenCenterX) {\n    const config = {\n        left: false,\n        centerX: false,\n        right: false,\n        top: false,\n        centerY: false,\n        bottom: false\n    }\n    const coorditates = {\n    \n    }\n    let diffsX = [];\n    let diffsY = [];\n    \n    const sides = {\n        leftSide: approxeq(elenentPositions, activeElemetPosition.left),\n        centerElementSideX: approxeq(elenentPositions, activeElemetPosition.centerX),\n        rightSide: approxeq(elenentPositions, activeElemetPosition.right),\n        topSide: approxeq(elenentPositions, activeElemetPosition.top),\n        bottomSide: approxeq(elenentPositions, activeElemetPosition.bottom),\n        centerElementSideY: approxeq(elenentPositions, activeElemetPosition.centerY)\n    }\n    \n    for (let [key, value] of Object.entries(sides)) {\n        if (value) {\n            switch (key) {\n                case 'leftSide': {\n                    coorditates.left = sides.leftSide;\n                    config.left = true;\n                    diffsX.push(+sides.leftSide - +activeElemetPosition.left);\n                    break;\n                }\n                case 'centerElementSideX': {\n                    coorditates.centerX = sides.centerElementSideX;\n                    config.centerX = true;\n                    diffsX.push(+sides.centerElementSideX - +activeElemetPosition.centerX);\n                    break;\n                }\n                case 'rightSide': {\n                    coorditates.right = sides.rightSide;\n                    config.right = true;\n                    diffsX.push(+sides.rightSide - +activeElemetPosition.right);\n                    break;\n                }\n                case 'topSide': {\n                    coorditates.top = sides.topSide;\n                    config.top = true;\n                    diffsY.push(+sides.topSide - +activeElemetPosition.top);\n                    break;\n                }\n                case 'centerElementSideY': {\n                    coorditates.centerY = sides.centerElementSideY;\n                    config.centerY = true;\n                    diffsY.push(+sides.centerElementSideY - +activeElemetPosition.centerY);\n                    break;\n                }\n                case 'bottomSide': {\n                    coorditates.bottom = sides.bottomSide;\n                    config.bottom = true;\n                    diffsY.push(+sides.bottomSide - +activeElemetPosition.bottom);\n                    break;\n                }\n                default:\n                    break;\n            }\n        }\n    }\n    return {\n        config: config,\n        coorditates: coorditates,\n        diffX: diffsX.length ? Math.min.apply(null, diffsX) : 10,\n        diffY: diffsY.length ? Math.min.apply(null, diffsY) : 10\n    };\n}\n\nfunction getArrayOfCoorditates(coordinates, center, type) {\n    let res = [center];\n    coordinates.map(element => {\n        res = type === 'left'\n          ? res.concat(Object.values((({left, right, centerX}) => ({left, right, centerX}))(element)))\n          : res.concat(Object.values((({top, bottom, centerY}) => ({top, bottom, centerY}))(element)))\n    })\n    return res;\n}\n\nfunction handleGuideLines (storage, position, activeElementConfig, type) {\n    const linesConfig = getGuidlinesConfig(type === 'left' ? storage.verticalCoordinates : storage.horizontalCoordinates, activeElementConfig);\n    const linesCoordinates = type === 'left'\n      ? (({left, right, centerX}) => ({left, right, centerX}))(linesConfig.coorditates)\n      : (({top, bottom, centerY}) => ({top, bottom, centerY}))(linesConfig.coorditates)\n    const resPosition = type === 'left'\n      ? stopDragHandlerX(linesCoordinates, linesConfig.diffX, position)\n      : stopDragHandlerY(linesCoordinates, linesConfig.diffY, position);\n    for (let [key, value] of Object.entries(linesCoordinates)) {\n        if (value && Math.abs(value - activeElementConfig[key]) < 2.5) {\n            storage.guidlines[key].style.display = 'block';\n            storage.guidlines[key].style[type] = `${parseInt(value)}px`;\n            storage.guidlines[key].style[type === 'left' ? 'borderLeft' : 'borderTop'] = (value === storage.screenCenterY || value === storage.screenCenterX)\n              ? `1.5px solid rgba(51, 122, 255, 0.51)`\n              : `1.5px dotted rgba(51, 122, 255, 0.51)`;\n        } else {\n            storage.guidlines[key].style.display = 'none';\n        }\n    }\n    return resPosition;\n    \n}\n\n// TODO: optimize (to one function)\nfunction stopDragHandlerX(linesConfig, diffX, position) {\n    guidLinesConfig.normalizeX = guidLinesConfig.newPositionX - position\n    guidLinesConfig.newPositionX = position;\n    for (let [key, value] of Object.entries(linesConfig)) {\n        if (value && !guidLinesConfig.stopDragX && !guidLinesConfig.tempPositionX && !guidLinesConfig.stopDragX) {\n            guidLinesConfig.stopDragX = true;\n            guidLinesConfig.newPositionX += (diffX + guidLinesConfig.normalizeX);\n            guidLinesConfig.tempPositionX = guidLinesConfig.newPositionX;\n        }  else if (Math.abs(guidLinesConfig.newPositionX - guidLinesConfig.tempPositionX) >= 5 && guidLinesConfig.stopDragX) {\n            guidLinesConfig.stopDragX = false;\n            guidLinesConfig.normalizeX = 0;\n            guidLinesConfig.tempPositionX = 0;\n        }\n    }\n    return !guidLinesConfig.stopDragX ? guidLinesConfig.newPositionX : guidLinesConfig.tempPositionX;\n}\n\nfunction stopDragHandlerY(linesConfig, diffY, position) {\n    guidLinesConfig.normalizeY = guidLinesConfig.newPositionY - position\n    guidLinesConfig.newPositionY = position;\n    for (let [key, value] of Object.entries(linesConfig)) {\n        if (value && !guidLinesConfig.stopDragY && !guidLinesConfig.tempPositionY) {\n            guidLinesConfig.stopDragY = true;\n            guidLinesConfig.newPositionY += (diffY + guidLinesConfig.normalizeY);\n            guidLinesConfig.tempPositionY = guidLinesConfig.newPositionY;\n        }  else if (Math.abs(guidLinesConfig.newPositionY - guidLinesConfig.tempPositionY) >= 5 && guidLinesConfig.stopDragY) {\n            guidLinesConfig.stopDragY = false;\n            guidLinesConfig.normalizeY = 0;\n            guidLinesConfig.tempPositionY = 0;\n        }\n    }\n    return !guidLinesConfig.stopDragY ? guidLinesConfig.newPositionY : guidLinesConfig.tempPositionY;\n}\n\n// END GUIDLINES\n\nfunction processRotate(radians) {\n    \n    const {\n        el,\n        storage\n    } = this;\n    \n    const {\n        controls,\n        transform,\n        refang,\n        snap\n    } = storage;\n    \n    const matrix = [...transform];\n    \n    const angle = snapToGrid(refang + radians, snap.angle);\n    //rotate(Xdeg) = matrix(cos(X), sin(X), -sin(X), cos(X), 0, 0);\n    matrix[0] = floatToFixed(Math.cos(angle));\n    matrix[1] = floatToFixed(Math.sin(angle));\n    matrix[2] = - floatToFixed(Math.sin(angle));\n    matrix[3] = floatToFixed(Math.cos(angle));\n    \n    window.parent.postMessage({ event: 'rotate-from-resizer', value: angle * (180 / Math.PI) }, 'http://127.0.0.1:3978/#/edit');\n    const css = matrixToCSS(matrix);\n    \n    Helper(controls).css(css);\n    Helper(el).css(css);\n    \n    storage.cached = matrix;\n}\n\nfunction matrixToCSS(arr) {\n    const style = `matrix(${arr.join()})`;\n    \n    return {\n        transform: style,\n        webkitTranform: style,\n        mozTransform: style,\n        msTransform: style,\n        otransform: style\n    }\n}\n","import {\n    recalcPoint\n} from '../common'\n\nconst dRE = /([achlmqstvz])([^achlmqstvz]*)/gi;\nconst sepRE = /\\s*,\\s*|\\s+/g;\n\nfunction parsePath(path)  {\n\n    let match = dRE.lastIndex = 0;\n\n    const serialized = [];\n\n    while ((match = dRE.exec(path))) {\n\n        const cmd = match[1];\n        const upCmd = cmd.toUpperCase();\n\n        serialized.push({\n            relative: cmd !== upCmd,\n            key: upCmd,\n            cmd: cmd,\n            value: match[2].trim().split(sepRE).map(val => { \n                if (!isNaN(val)) {\n                    return Number(val);\n                }\n            })\n        });\n    }\n\n    return serialized;\n}\n\nexport function movePath(params) {\n\n    const { path, x, y } = params;\n\n    const serialized = parsePath(path);\n\n    let str = '';\n\n    let firstCommand = true;\n\n    for (let i = 0, len = serialized.length; i < len; i++) {\n\n        const item = serialized[i];\n\n        const { \n            value: values,\n            key: cmd,\n            relative\n        } = item;\n\n        switch (cmd) {\n            case 'M':\n                if (relative && !firstCommand) break;\n                values[0] = values[0] + x;\n                values[1] = values[1] + y;\n                break;\n            case 'A':\n                if (relative) break;\n                values[5] = values[5] + x;\n                values[6] = values[6] + y;\n                break;\n            case 'C':\n                if (relative) break;\n                values[0] = values[0] + x;\n                values[1] = values[1] + y;\n                values[2] = values[2] + x;\n                values[3] = values[3] + y;\n                values[4] = values[4] + x;\n                values[5] = values[5] + y;\n                break;\n            case 'H':\n                if (relative) break;\n                values[0] = values[0] + x;\n                break;\n            case 'V':\n                if (relative) break;\n                values[0] = values[0] + y;\n                break;\n            case 'L':\n            case 'T':\n                if (relative) break;\n                values[0] = values[0] + x;\n                values[1] = values[1] + y;\n                break;\n            \n            case 'Q':\n            case 'S':\n                if (relative) break;\n                values[0] = values[0] + x;\n                values[1] = values[1] + y;\n                values[2] = values[2] + x;\n                values[3] = values[3] + y;\n                break;\n            case 'Z':\n                values[0] = '';\n                break;\n        }\n\n        str += item.cmd + item.value.join(',') + ' ';\n        firstCommand = false;\n    }\n\n    return str;\n}\n\nexport function resizePath(params) {\n\n    const {\n        bBox,\n        path,\n        baseData,\n        dx,\n        dy,\n        revX,\n        revY,\n        fixedX,\n        fixedY\n    } = params;\n\n    const serialized = parsePath(path);\n\n    const { \n        width: boxW,\n        height: boxH\n    } = bBox;\n\n    let str = '';\n    const res = [];\n\n    let firstCommand = true;\n\n    for (let i = 0, len = serialized.length; i < len; i++) {\n\n        const item = serialized[i];\n\n        const { \n            value: values,\n            key: cmd,\n            relative\n        } = item;\n            \n        switch (cmd) {\n\n            case 'A': {\n\n                //A rx ry x-axis-rotation large-arc-flag sweep-flag x y\n                const [ rx, ry, x_axis_rot, large_arc_flag, sweep_flag, x, y ] = values;\n\n                const factorX = getFactor(revX),\n                    factorY = getFactor(revY);\n                \n                const params = [];\n\n                const newRx = rx + dx * factorX * (rx / boxW),\n                    newRy =  ry + dy * factorY * (ry / boxH);\n                \n                params.push(\n                    newRx,\n                    newRy,\n                    x_axis_rot,\n                    large_arc_flag,\n                    sweep_flag\n                );\n\n                if (relative) {\n\n                    params.push(\n                        setRelativeCoord(x, dx * factorX, boxW),\n                        setRelativeCoord(y, dy * factorY, boxH)\n                    );\n\n                } else {\n\n                    let valX = setCoord(x, dx, fixedX, boxW),\n                        valY = setCoord(y, dy, fixedY, boxH);\n\n                    const { resX, resY } = recalcPoint({\n                        x: valX,\n                        y: valY,\n                        ...baseData\n                    });\n\n                    params.push(\n                        resX,\n                        resY\n                    );\n                }\n\n                res.push(params);\n\n                break;\n            }\n\n            case 'C': {\n\n                //C x1 y1, x2 y2, x y (or c dx1 dy1, dx2 dy2, dx dy)\n                const [ x1, y1, x2, y2, x, y ] = values;\n\n                if (relative) {\n\n                    const factorX = getFactor(revX),\n                        factorY = getFactor(revY);\n\n                    res.push([\n                        setRelativeCoord(x1, dx * factorX, boxW),\n                        setRelativeCoord(y1, dy * factorY, boxH),\n                        setRelativeCoord(x2, dx * factorX, boxW),\n                        setRelativeCoord(y2, dy * factorY, boxH),\n                        setRelativeCoord(x, dx * factorX, boxW),\n                        setRelativeCoord(y, dy * factorY, boxH)\n                    ]);\n\n                } else {\n\n                    const factorX1 = revX && x1 > fixedX || !revX && x1 < fixedX ? -1 : 1,    \n                        factorY1 = revY && y1 > fixedY || !revY && y1 < fixedY ? -1 : 1,\n                        factorX2 = revX && x2 > fixedX || !revX && x2 < fixedX ? -1 : 1,    \n                        factorY2 = revY && y2 > fixedY || !revY && y2 < fixedY ? -1 : 1;\n\n                    const { resX: resX1, resY: resY1 } = recalcPoint({\n                        x: setCoord(x1, dx * factorX1, fixedX, boxW),\n                        y: setCoord(y1, dy * factorY1, fixedY, boxH),\n                        ...baseData\n                    });\n\n                    const { resX: resX2, resY: resY2 } = recalcPoint({\n                        x: setCoord(x2, dx * factorX2, fixedX, boxW),\n                        y: setCoord(y2, dy * factorY2, fixedY, boxH),\n                        ...baseData\n                    });\n\n                    const { resX: resX3, resY: resY3 } = recalcPoint({\n                        x: setCoord(x, dx, fixedX, boxW),\n                        y: setCoord(y, dy, fixedY, boxH),\n                        ...baseData\n                    });\n\n                    res.push([\n                        resX1,\n                        resY1,\n                        resX2,\n                        resY2,\n                        resX3,\n                        resY3\n                    ]);\n                }\n                break;\n            }\n\n            case 'H': {\n\n                if (relative) {\n                \n                    const factorX = getFactor(revX);\n                    res.push([\n                        setRelativeCoord(values[0], dx * factorX, boxW)\n                    ]);\n\n                } else {\n\n                    const { resX } = recalcPoint({\n                        x: setCoord(values[0], dx, fixedX, boxW),\n                        y: 0,\n                        ...baseData\n                    });\n\n                    res.push([resX]);\n                }\n                break;\n            }\n\n            case 'V': {\n\n                if (relative) {\n\n                    const factorY = getFactor(revY);\n\n                    res.push([\n                        setRelativeCoord(values[0], dy * factorY, boxH)\n                    ]);\n\n                } else {\n\n                    const { resY } = recalcPoint({\n                        x: 0,\n                        y: setCoord(values[0], dy, fixedY, boxH),\n                        ...baseData\n                    });\n\n                    res.push([resY]);\n                }\n                break;\n            }\n\n            case 'T':\n            case 'L': {\n\n                if (relative) {\n\n                    const factorX = getFactor(revX),\n                        factorY = getFactor(revY);\n\n                    res.push([\n                        setRelativeCoord(values[0], dx * factorX, boxW), \n                        setRelativeCoord(values[1], dy * factorY, boxH)\n                    ]);\n\n                } else {\n\n                    const { resX, resY } = recalcPoint({\n                        x: setCoord(values[0], dx, fixedX, boxW),\n                        y: setCoord(values[1], dy, fixedY, boxH),\n                        ...baseData\n                    });\n\n                    res.push([resX, resY]);\n                }\n                break;\n            }\n\n            case 'M': {\n\n                // M x y (or dx dy)\n                const [ x, y ] = values;\n\n                if (relative && !firstCommand) {\n\n                    const factorX = getFactor(revX),\n                        factorY = getFactor(revY);\n\n                    res.push([\n                        setRelativeCoord(x, dx * factorX, boxW), \n                        setRelativeCoord(y, dy * factorY, boxH)\n                    ]);\n\n                } else {\n\n                    const { resX, resY } = recalcPoint({\n                        x: setCoord(x, dx, fixedX, boxW),\n                        y: setCoord(y, dy, fixedY, boxH),\n                        ...baseData\n                    });\n\n                    res.push([resX, resY]);\n                }\n   \n                break;\n            }\n\n            case 'Q': {\n\n                //Q x1 y1, x y (or q dx1 dy1, dx dy)\n                const [x1, y1, x, y] = values;\n\n                if (relative) {\n\n                    const factorX = getFactor(revX),\n                        factorY = getFactor(revY);\n\n                    res.push([\n                        setRelativeCoord(x1, dx * factorX, boxW), \n                        setRelativeCoord(y1, dy * factorY, boxH), \n                        setRelativeCoord(x, dx * factorX, boxW), \n                        setRelativeCoord(y, dy * factorY, boxH)\n                    ]);\n\n                } else {\n\n                    const factorX = revX && x1 > fixedX || !revX && x1 < fixedX ? -1 : 1,    \n                        factorY = revY && y1 > fixedY || !revY && y1 < fixedY ? -1 : 1;\n\n                    const { resX: resX1, resY: resY1 } = recalcPoint({\n                        x: setCoord(x1, dx * factorX, fixedX, boxW),\n                        y: setCoord(y1, dy * factorY, fixedY, boxH),\n                        ...baseData\n                    });\n\n                    const { resX: resX2, resY: resY2 } = recalcPoint({\n                        x: setCoord(x, dx, fixedX, boxW),\n                        y: setCoord(y, dy, fixedY, boxH),\n                        ...baseData\n                    });\n\n                    res.push([resX1, resY1, resX2, resY2]);\n                }\n                \n                break;\n            }\n\n            case 'S': {\n\n                //S x2 y2, x y (or s dx2 dy2, dx dy)\n                const [ x2, y2, x, y ] = values;\n\n                if (relative) {\n\n                    const factorX = getFactor(revX),    \n                        factorY = getFactor(revY);\n\n                    res.push([\n                        setRelativeCoord(x2, dx * factorX, boxW),\n                        setRelativeCoord(y2, dy * factorY, boxH),\n                        setRelativeCoord(x, dx * factorX, boxW),\n                        setRelativeCoord(y, dy * factorY, boxH)\n                    ]);\n                } else {\n\n                    const factorX = revX && x2 > fixedX || !revX && x2 < fixedX ? -1 : 1,    \n                        factorY = revY && y2 > fixedY || !revY && y2 < fixedY ? -1 : 1;\n\n                    const { resX : resX1, resY: resY1 } = recalcPoint({\n                        x: setCoord(x2, dx * factorX, fixedX, boxW),\n                        y: setCoord(y2, dy * factorY, fixedY, boxH),\n                        ...baseData\n                    });\n\n                    const { resX : resX2, resY: resY2 } = recalcPoint({\n                        x: setCoord(x, dx, fixedX, boxW),\n                        y: setCoord(y, dy, fixedY, boxH),\n                        ...baseData\n                    });\n\n                    res.push([\n                        resX1,\n                        resY1,\n                        resX2,\n                        resY2\n                    ]);\n                }\n                break;\n            }\n\n            case 'Z': {\n                res.push(['']);\n                break;\n            }\n        }\n\n        str += item.cmd + res[i].join(',') + ' ';\n\n        firstCommand = false;\n    }\n\n    return str;\n}\n\nexport function setCoord(value, diff, fixed, dist) {\n    return value + diff * (Math.abs(value - fixed) / dist);\n}\n\nfunction setRelativeCoord(value, diff, dist) {\n    return value + diff * (value / dist);\n}\n\nexport function getFactor(b) {\n    return b === true ? -1 : 1;\n}","import { Helper } from '../../helper'\nimport Subject from '../subject'\n\nimport { \n    parseTransform,\n    getOffset\n} from '../../util/css-util'\n\nimport {\n    DEG,\n    snapToGrid,\n    snapCandidate,\n    rotatedTopLeft,\n    recalcPoint\n} from '../common'\n\nimport {\n    movePath,\n    resizePath,\n    setCoord,\n    getFactor\n} from './path'\nimport { isUndef } from '../../util/util';\n\nconst MIN_SIZE = 2; \nconst ROT_OFFSET = 25;\nconst floatRE = /[+-]?\\d+(\\.\\d+)?/g; \nconst translateRE = /translate\\(.*\\)(.*)translate\\(.*\\)|$/;\n\nexport default class DraggableSVG extends Subject {\n\n    constructor(el, options, Observable) {\n        super(el, Observable);\n        this.enable(options);\n    }\n\n    _init(item, options) {\n        _init.call(this, item, options);\n    }\n\n    _destroy(item) {\n        _destroy.call(this, item);\n    }\n\n    _drag() {\n        processMove.call(this, ...arguments);\n    }\n\n    _rotate() {\n        processRotate.call(this, ...arguments);\n    }\n\n    _resize() {\n        processResize.call(this, ...arguments);\n    }\n\n    _compute() {\n        return _compute.call(this, ...arguments);\n    }\n\n    _apply(actionName) {\n\n        const {\n            box, \n            handles,\n            refang,\n            factor,\n            wrapper,\n            cached,\n            transform\n        } = this.storage;\n\n        const translate = parseTransform(wrapper.getAttribute('transform') || 'translate(0 0)').translate;\n\n        const { x, y, width: newWidth, height: newHeight } = box.getBBox();\n\n        const dx = translate[0],\n            dy = translate[1],\n            resultX = x + dx,\n            resultY = y + dy;\n\n        const centerX = resultX + newWidth / 2,\n            centerY = resultY + newHeight / 2;\n\n        if (actionName !== 'rotate') {\n\n            applyTransformToHandles(box, handles, {\n                x: resultX,\n                y: resultY,\n                width: newWidth,\n                height: newHeight,\n                angle: refang * factor\n            });\n        }\n\n        if (actionName === 'drag') {\n\n            if (dx === 0 && dy === 0) return;\n                \n            wrapper.removeAttribute('transform');\n\n            const els = [];\n\n            if (this.el.tagName.toLowerCase() === 'g') {\n\n                this.el.childNodes.forEach(item => {\n                    if (item.nodeType === 1) {\n                        els.push(item);\n                    }\n                });\n\n                this.el.removeAttribute('transform');\n            } else {\n                els.push(this.el);\n            }\n\n            els.forEach((element) => {\n                applyTranslate(element, {\n                    x: dx,\n                    y: dy,\n                    angle: refang * factor * DEG,\n                    centerX,\n                    centerY\n                });\n            })\n        }\n\n        if (actionName === 'resize') {\n\n            if (isUndef(cached)) return;\n\n            const els = [];\n\n            const {\n                revX, \n                revY,\n                scaleX,\n                scaleY,\n                diffX,\n                diffY\n            } = cached;\n                \n            let isGroup = false;\n\n            if (this.el.tagName.toLowerCase() === 'g') {\n                this.el.childNodes.forEach(item => {\n                    if (item.nodeType === 1) {\n                        els.push(item);\n                    }\n                });\n                isGroup = true;\n            } else {\n                els.push(this.el);\n            }\n\n            els.forEach((element) => {\n\n                applyResize(element, {\n                    scaleX,\n                    scaleY,\n                    diffX: diffX * getFactor(revX),\n                    diffY: diffY * getFactor(revY),\n                    revX,\n                    revY,\n                    angle: refang * factor,\n                    factor,\n                    centerX,\n                    centerY,    \n                    bBox: isGroup === true \n                            ? transform.bBox \n                            : element.getBBox(),\n                    store: this.storage\n                });\n            });\n\n            this.storage.cached = null;\n        }\n    }\n\n    onRefreshState(data) {\n\n        const store = this.storage;\n\n        const recalc = refreshState.call(\n            this,\n            data\n        );\n\n        Object.keys(data).forEach(key => {\n            store[key] = data[key];\n        });\n\n        Object.keys(recalc).forEach(key => {\n            store[key] = recalc[key];\n        });\n    }\n}\n\nfunction _init(sel) {\n\n    const wrapper = createSVG('g');\n    sel.parentNode.appendChild(wrapper);\n\n    const {\n        width: w, \n        height: h, \n        x, \n        y\n    } = sel.getBBox();\n\n    const transform = sel.getAttribute('transform') || 'translate(0 0)';\n\n    const box = createSVG('rect');\n\n    const attrs = [\n        ['width', w],\n        ['height', h],\n        ['x', x],\n        ['y', y],\n        ['fill', 'transparent'],\n        ['stroke', '#00a8ff'],\n        ['stroke-dasharray', '3 3'],\n        ['transform', transform]\n    ];\n\n    attrs.forEach(item => {\n        box.setAttribute(item[0], item[1]);\n    });\n\n    let group = createSVG('g');\n        group.appendChild(box);\n\n    wrapper.appendChild(group);\n\n    const handles = {\n        tl: [x, y],\n        tr: [x + w, y],\n        br: [x + w, y + h],\n        bl: [x, y + h],\n        tc: [x + w / 2, y],\n        bc: [x + w / 2, y + h],\n        ml: [x, y + h / 2],\n        mr: [x + w, y + h / 2],\n        rotator: [x + w / 2, y - ROT_OFFSET]\n    };\n\n    Object.keys(handles).forEach(key => {\n        const data = handles[key];\n        handles[key] = createHandler(data[0], data[1], transform);\n        wrapper.appendChild(\n            createSVG('g').appendChild(handles[key]).parentNode\n        );\n    });\n\n    Object.assign(this.storage, {\n        wrapper,\n        box,\n        handles,\n        parent: wrapper.parentNode\n    });\n\n    Helper(wrapper).on('mousedown', this._onMouseDown)\n                    .on('touchstart', this._onTouchStart);\n}\n\nfunction _compute(e) {\n\n    const {\n        box,\n        handles,\n        snap,\n        parent\n    } = this.storage;\n\n    const handle = Helper(e.target);\n\n    let factor = 1;\n\n    //reverse axis\n    const revX = handle.is(handles.tl) ||\n                handle.is(handles.ml) ||\n                handle.is(handles.bl) ||\n                handle.is(handles.tc);\n\n    const revY = handle.is(handles.tl) || \n                handle.is(handles.tr) || \n                handle.is(handles.tc) || \n                handle.is(handles.ml);\n\n    //reverse angle\n    if (handle.is(handles.tr) || \n        handle.is(handles.bl)\n    ) { \n        factor = -1;\n    }\n\n    const tl_off = getOffset(handles.tl),\n        tr_off = getOffset(handles.tr);\n        \n    const refang = Math.atan2(\n        tr_off.top - tl_off.top, \n        tr_off.left - tl_off.left\n    ) * factor;\n\n    const bBox = box.getBBox();\n\n    const { width: cw, height: ch, x: c_left, y: c_top } = bBox;\n                                                                                                \n    const coords = rotatedTopLeft(\n        c_left,\n        c_top,\n        cw,\n        ch,\n        refang,\n        revX,\n        revY\n    );\n\n    const boxOffset = getOffset(box);\n\n    const center_x = boxOffset.left + cw / 2,\n        center_y = boxOffset.top + ch / 2;\n\n    const pressang = Math.atan2(\n        e.pageY - center_y,\n        e.pageX - center_x\n    );\n\n    const onTopEdge = handle.is(handles.tl) || handle.is(handles.tc) || handle.is(handles.tr),\n        onLeftEdge = handle.is(handles.tl) || handle.is(handles.ml) || handle.is(handles.bl),\n        onRightEdge = handle.is(handles.tr) || handle.is(handles.mr) || handle.is(handles.br),\n        onBottomEdge = handle.is(handles.br) || handle.is(handles.bc) || handle.is(handles.bl);\n\n    const transform = {\n        orig: this.el.getAttribute('transform'),\n        value: box.getAttribute('transform'),\n        scaleX: revX ? cw + c_left : c_left,\n        scaleY: revY ? ch + c_top : c_top,\n        bBox\n    };\n\n    return {\n        transform,\n        parentScale: parseTransform(parent.getAttribute('transform') || 'scale(1 1)').scale,\n        cw,\n        ch,\n        center: {\n            x: boxOffset.left + cw / 2,\n            y: boxOffset.top + ch / 2,\n            left: c_left + cw / 2,\n            top: c_top + ch / 2\n        },\n        left: snapCandidate(c_left, snap.x),\n        top: snapCandidate(c_top, snap.y),\n        coordX: coords.left,\n        coordY: coords.top,\n        factor,\n        pressang,\n        refang,\n        revX,\n        revY,\n        handle,\n        onTopEdge,\n        onLeftEdge,\n        onRightEdge,\n        onBottomEdge\n    }\n}\n\nfunction _destroy() {\n\n    const { wrapper } = this.storage;\n\n    Helper(wrapper).off('mousedown', this._onMouseDown)\n                    .off('touchstart', this._onTouchStart);\n\n    this.el.parentNode.removeChild(wrapper);\n}\n\nfunction refreshState(params) {\n\n    const { \n        factor, \n        revX, \n        revY,\n    } = params;\n\n    const { \n        box,\n        handles,\n        snap\n    } = this.storage;\n\n    const tl_off = getOffset(handles.tl),\n        tr_off = getOffset(handles.tr);\n\n    let refang = Math.atan2(\n        tr_off.y - tl_off.y, \n        tr_off.x - tl_off.x\n    ) * factor;\n\n    const bBox = box.getBBox();\n\n    const { width: cw, height: ch, x: c_left, y: c_top } = bBox;\n                                                                                                 \n    const coords = rotatedTopLeft(\n        c_left,\n        c_top,\n        cw,\n        ch,\n        refang,\n        revX,\n        revY\n    );\n\n    const boxOffset = getOffset(box);\n\n    const transform = {\n        orig: this.el.getAttribute('transform'),\n        value: box.getAttribute('transform'),\n        scaleX: revX ? cw + c_left : c_left,\n        scaleY: revY ? ch + c_top : c_top,\n        bBox\n    };\n\n    return {\n        transform,\n        cw,\n        ch,\n        center: {\n            x: boxOffset.left + cw / 2,\n            y: boxOffset.top + ch / 2,\n            left: c_left + cw / 2,\n            top: c_top + ch / 2\n        },\n        left: snapCandidate(c_left, snap.x),\n        top: snapCandidate(c_top, snap.y),\n        coordX: coords.left,\n        coordY: coords.top,\n        factor,\n        refang\n    }\n}\n\nfunction processResize(\n    width,\n    height,\n    revX, \n    revY\n) {\n\n    const {\n        box,\n        handles,\n        snap,\n        left,\n        top,\n        coordX,\n        coordY,\n        refang,\n        factor,\n        cw,\n        ch,\n        transform\n    } = this.storage;\n    const sel = this.el;\n        \n    let newWidth = Number(box.getAttribute('width')),\n        newHeight = Number(box.getAttribute('height'));\n\n    if (width !== null) {\n        newWidth = snapToGrid(width, snap.x);\n    }\n\n    if (height !== null) {\n        newHeight = snapToGrid(height, snap.y);\n    }\n\n    if (Math.abs(newWidth) < MIN_SIZE || Math.abs(newHeight) < MIN_SIZE) return;\n\n    const coords = rotatedTopLeft(\n        left,\n        top,\n        newWidth,\n        newHeight,\n        refang,\n        revX,\n        revY\n    );\n\n    const resultY = top - (coords.top - coordY),\n        resultX = left - (coords.left - coordX);\n\n    applyTransformToHandles(box, handles, {\n        x: resultX,\n        y: resultY,\n        width: newWidth,\n        height: newHeight,\n        angle: refang * factor\n    });\n\n    const scaleX = newWidth / cw,\n        scaleY = newHeight / ch;\n\n    this.storage.cached = {\n        scaleX: scaleX,\n        scaleY: scaleY,\n        diffX: newWidth - cw,\n        diffY: newHeight - ch,\n        revX: revX,\n        revY: revY\n    };\n\n    const { scaleX: ptX, scaleY: ptY } = transform;\n\n    const scaleString = `translate(${ptX} ${ptY}) scale(${scaleX} ${scaleY}) translate(${-ptX} ${-ptY})`;\n\n    if (sel.tagName.toLowerCase() === 'g') {\n        sel.childNodes.forEach(element => {\n\n            if (element.nodeType !== 1) return;\n\n            const oldTransform = element.getAttribute('transform') || '';\n            element.setAttribute(\n                'transform', \n                oldTransform.replace(translateRE, scaleString)\n            );\n        });\n    } else {\n        const oldTransform = sel.getAttribute('transform') || '';\n        sel.setAttribute(\n            'transform', \n            oldTransform.replace(translateRE, scaleString)\n        );\n    }\n}\n\nfunction processMove(\n    top,\n    left\n) {\n    let {\n        snap,\n        transform,\n        wrapper\n    } = this.storage;\n\n    const originTransform = transform.orig || '';\n    \n    const x = snapToGrid(left, snap.x),\n        y = snapToGrid(top, snap.y);\n\n    const transformString = `translate(${x} ${y})`;\n    const newTransform = originTransform.replace(/translate\\(.+\\)|^/, transformString);\n\n    wrapper.setAttribute('transform', transformString);\n    this.el.setAttribute('transform', newTransform);\n}\n\nfunction processRotate(radians) {\n\n    const {\n        refang,\n        snap,\n        center,\n        box,\n        handles\n    } = this.storage;\n\n    const angle = snapToGrid(refang + radians, snap.angle);\n\n    const transform = `rotate(${angle * DEG} ${center.left} ${center.top})`;\n\n    box.setAttribute('transform', transform);\n\n    Object.keys(handles).forEach(hdl => {\n        handles[hdl].setAttribute('transform', transform);\n    });\n\n    if (this.el.tagName.toLowerCase() === 'g') {\n        this.el.childNodes.forEach((element) => {\n            if (element.nodeType !== 1) return;\n            element.setAttribute('transform', transform);\n        });\n    } else {\n        this.el.setAttribute('transform', transform);\n    }\n}\n\nfunction createSVG(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\n\nfunction createHandler(l, t, transform) {\n\n    const handler = createSVG('circle');\n    \n    const items = {\n        cx: l,\n        cy: t,\n        r: 6,\n        fill: 'white',\n        stroke: '#00a8ff',\n        transform: transform\n    };\n\n    Object.keys(items).map(key => {\n        handler.setAttribute(key, items[key]);\n    });\n\n    return handler;\n}\n\nfunction applyTranslate(element, data) {\n\n    const {\n        x,\n        y,\n        angle,\n        centerX,\n        centerY\n    } = data;\n\n    const attrs = [\n        ['transform', `rotate(${angle} ${centerX} ${centerY})`]\n    ];\n\n    switch(element.tagName.toLowerCase()) {\n\n        case 'text':\n        case 'rect': {\n\n                let resX = Number(element.getAttribute('x')) + x,\n                    resY = Number(element.getAttribute('y')) + y;\n\n                attrs.push(\n                    ['x', resX],\n                    ['y', resY]\n                );\n            }\n            break;\n\n        case 'circle':\n        case 'ellipse': {\n\n                let resX = Number(element.getAttribute('cx')) + x,\n                    resY = Number(element.getAttribute('cy')) + y;\n\n                attrs.push(\n                    ['cx', resX],\n                    ['cy', resY]\n                );\n            }\n            break;\n        \n        case 'line': {\n\n                let resX1 = Number(element.getAttribute('x1')) + x,\n                    resY1 = Number(element.getAttribute('y1')) + y,\n                    resX2 = Number(element.getAttribute('x2')) + x,\n                    resY2 = Number(element.getAttribute('y2')) + y;\n\n                attrs.push(\n                    ['x1', resX1],\n                    ['y1', resY1],\n                    ['x2', resX2],\n                    ['y2', resY2]\n                );\n            }\n            break;\n\n        case 'polygon':\n        case 'polyline': {\n\n                const points = parsePoints(element.getAttribute('points'));\n                const result = points.map(item => { \n\n                    item[0] = Number(item[0]) + x;\n                    item[1] = Number(item[1]) + y;\n\n                    return item.join(' ');\n                }).join(' '); \n\n                attrs.push(\n                    ['points', result]\n                );\n            }\n            break;\n        \n        case 'path': {\n\n                const path = element.getAttribute('d');\n\n                attrs.push(['d', movePath(\n                    {\n                        path, \n                        x, \n                        y\n                    }\n                )]);\n            }\n            break;\n\n        default:\n            break;\n    }\n\n    attrs.forEach(item => {\n        element.setAttribute(item[0], item[1]);\n    });\n}\n\nfunction applyResize(element, data) {\n\n    const {\n        scaleX,\n        scaleY,\n        diffX,\n        diffY,\n        revX,\n        revY,\n        angle,\n        centerX,\n        centerY,\n        bBox,\n        store\n    } = data;\n\n    const {\n        onRightEdge,\n        onLeftEdge,\n        onTopEdge,\n        onBottomEdge,\n        center\n    } = store;\n\n    const { \n        x: boxX, \n        y: boxY, \n        width: boxW, \n        height: boxH\n    } = bBox;\n\n    let fixedX = 0, \n        fixedY = 0;\n    \n    if (onRightEdge) {\n        fixedX = boxX;\n    } \n    if (onLeftEdge) {\n        fixedX = boxX + boxW;\n    } \n    if (onTopEdge) {\n        fixedY = boxY + boxH;\n    } \n    if (onBottomEdge) {\n        fixedY = boxY;\n    }\n\n    const baseData = {\n        centerX: center.left,\n        centerY: center.top,\n        newCenterX: centerX,\n        newCenterY: centerY,\n        angle: angle\n    };\n\n    const attrs = [\n        ['transform', `rotate(${angle * DEG} ${centerX} ${centerY})`]\n    ];\n\n    switch(element.tagName.toLowerCase()) {\n\n        case 'text': {\n\n            const x = Number(element.getAttribute('x')),\n                y = Number(element.getAttribute('y'));\n\n            const { resX, resY } = recalcPoint({\n                x: setCoord(x, diffX, fixedX, boxW),\n                y: setCoord(y, diffY, fixedY, boxH),\n                ...baseData\n            });\n\n            attrs.push(\n                ['x', resX + (scaleX < 0 ? boxW : 0)],\n                ['y', resY + (scaleY < 0 ? boxH : 0)]\n            );\n        }\n        break;\n\n        case 'circle': {\n\n                const r = Number(element.getAttribute('r')),\n                    cx = Number(element.getAttribute('cx')),\n                    cy = Number(element.getAttribute('cy')),\n                    newR = r * (Math.abs(scaleX) + Math.abs(scaleY)) / 2;\n\n                const { resX, resY } = recalcPoint({\n                    x: setCoord(cx, diffX, fixedX, boxW),\n                    y: setCoord(cy, diffY, fixedY, boxH),\n                    ...baseData\n                });\n\n                attrs.push(\n                    ['r', newR],\n                    ['cx', resX],\n                    ['cy', resY]\n                );\n            }\n            break;\n\n        case 'rect': {\n\n                const width = Number(element.getAttribute('width')),\n                    height = Number(element.getAttribute('height')),\n                    x = Number(element.getAttribute('x')),\n                    y = Number(element.getAttribute('y'));\n\n                const { resX, resY } = recalcPoint({\n                    x: setCoord(x, diffX, fixedX, boxW),\n                    y: setCoord(y, diffY, fixedY, boxH),\n                    ...baseData\n                });\n\n                const newWidth = width * Math.abs(scaleX),\n                    newHeight = height * Math.abs(scaleY);\n\n                attrs.push(\n                    ['x', resX - (scaleX < 0 ? newWidth : 0)],\n                    ['y', resY - (scaleY < 0 ? newHeight : 0)],\n                    ['width', newWidth],\n                    ['height', newHeight]\n                );\n            }\n            break;\n    \n        case 'ellipse': {\n\n                const rx = Number(element.getAttribute('rx')),\n                    ry = Number(element.getAttribute('ry')),\n                    cx = Number(element.getAttribute('cx')),\n                    cy = Number(element.getAttribute('cy'));\n\n                const { resX, resY } = recalcPoint({\n                    x: setCoord(cx, diffX, fixedX, boxW),\n                    y: setCoord(cy, diffY, fixedY, boxH),\n                    ...baseData\n                });\n\n                attrs.push(\n                    ['rx', rx * Math.abs(scaleX)],\n                    ['ry', ry * Math.abs(scaleY)],\n                    ['cx', resX],\n                    ['cy', resY]\n                );\n            }\n            break;\n        \n        case 'line': {\n\n                const resX1 = Number(element.getAttribute('x1')),\n                    resY1 = Number(element.getAttribute('y1')),\n                    resX2 = Number(element.getAttribute('x2')),\n                    resY2 = Number(element.getAttribute('y2'));\n\n                const { resX : resX1_, resY: resY1_  } = recalcPoint({\n                    x: setCoord(resX1, diffX, fixedX, boxW),\n                    y: setCoord(resY1, diffY, fixedY, boxH),\n                    ...baseData\n                });\n\n                const { resX : resX2_, resY: resY2_  } = recalcPoint({\n                    x: setCoord(resX2, diffX, fixedX, boxW),\n                    y: setCoord(resY2, diffY, fixedY, boxH),\n                    ...baseData\n                });\n\n                attrs.push(\n                    ['x1', resX1_],\n                    ['y1', resY1_],\n                    ['x2', resX2_],\n                    ['y2', resY2_]\n                );\n            }\n            break;\n\n        case 'polygon':\n        case 'polyline': {\n\n                const points = parsePoints(element.getAttribute('points'));\n                const result = points.map(item => {\n\n                    const { resX, resY } = recalcPoint({\n                        x: setCoord(Number(item[0]), diffX, fixedX, boxW),\n                        y: setCoord(Number(item[1]), diffY, fixedY, boxH),\n                        ...baseData\n                    });\n\n                    item[0] = resX;\n                    item[1] = resY;\n\n                    return item.join(' ');\n\n                }).join(' ');\n\n                attrs.push(['points', result]);\n            }\n            break;\n        \n        case 'path': {\n\n                const path = element.getAttribute('d');\n\n                attrs.push(['d', resizePath(\n                    {\n                        bBox,\n                        path,\n                        baseData,\n                        dx: diffX, \n                        dy: diffY,\n                        revX,\n                        revY,\n                        fixedX,\n                        fixedY\n                    }\n                )]);\n            }\n            break;\n\n        default: {}\n            break;\n    }\n\n    attrs.forEach(attr => {\n        element.setAttribute(attr[0], attr[1]);\n    });\n}\n\nfunction applyTransformToHandles(box, handles, data) {\n\n    let { x, y, width, height, angle } = data;\n\n    const halfWidth = width / 2,\n        halfHeight = height / 2;\n\n    const newTransform = `rotate(${angle * DEG} ${x + halfWidth} ${y + halfHeight})`;\n\n    const attrs = {\n        tl: [x, y],\n        ml: [x, y + halfHeight],\n        bl: [x, y + height],\n        tc: [x + halfWidth, y],\n        tr: [x + width, y],\n        mr: [x + width, y + halfHeight],\n        br: [x + width, y + height],\n        bc: [x + halfWidth, y + height],\n        rotator: [x + halfWidth, y - ROT_OFFSET + (height < 0 ? height : 0)]\n    };\n\n    x = x + (width < 0 ? width : 0);\n    y = y + (height < 0 ? height : 0);\n\n    const boxAttrs = {\n        x: x,\n        y: y,\n        width: Math.abs(width),\n        height: Math.abs(height),\n        transform: newTransform\n    };\n\n    Object.keys(boxAttrs).forEach(attr => {\n        box.setAttribute(attr, boxAttrs[attr]);\n    });\n\n    Object.keys(handles).forEach(key => {\n        const hdl = handles[key];\n        hdl.setAttribute('cx', attrs[key][0]);\n        hdl.setAttribute('cy', attrs[key][1]);\n        hdl.setAttribute('transform', newTransform);\n    });\n}\n\nfunction parsePoints(pts) {\n    return pts.match(floatRE).reduce((result, value, index, array) => {\n        if (index % 2 === 0) {\n            result.push(array.slice(index, index + 2));\n        } \n        return result; \n    }, []);\n}\n","/* @license\n * Move/Rotate/Resize tool\n * Released under the MIT license, 2018-2019\n * nichollascarter@gmail.com\n*/\n\nimport '../style/subjx.css'\nimport _drag from './core/transform/index'\nimport { Helper_ } from './core/helper'\n\nclass Subjx extends Helper_ {\n\n    constructor(params) {\n        super(params);\n    }\n\n    drag(method) {\n        return _drag.call(this, method);\n    }\n}\n\nexport default function(params) {\n    return new Subjx(params);\n}","import Observable from '../observer/Observer'\nimport Draggable from './html'\nimport DraggableSVG from './svg/index'\n\nimport {\n    arrMap\n} from '../util/util'\n\n// factory method for creating draggable elements\nexport default function _drag(options) {\n    if (this.length) {\n        const Ob = new Observable();\n        return arrMap.call(this, item => {\n            if (!(item instanceof SVGElement)) {\n                return new Draggable(item, options, Ob);\n            } else {\n                return new DraggableSVG(item, options, Ob);\n            }   \n        })\n    }\n}"],"sourceRoot":""}