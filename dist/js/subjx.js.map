{"version":3,"sources":["webpack://Subjx/webpack/bootstrap","webpack://Subjx/./src/js/core/util/util.js","webpack://Subjx/./src/js/core/observer/Observer.js","webpack://Subjx/./src/js/core/helper.js","webpack://Subjx/./src/js/core/util/css-util.js","webpack://Subjx/./src/js/core/transform/common.js","webpack://Subjx/./src/js/core/transform/subject.js","webpack://Subjx/./src/js/core/transform/html.js","webpack://Subjx/./src/js/core/transform/svg/path.js","webpack://Subjx/./src/js/core/transform/svg/index.js","webpack://Subjx/./src/js/index.js","webpack://Subjx/./src/js/core/transform/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","requestAnimFrame","requestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","msRequestAnimationFrame","f","setTimeout","cancelAnimFrame","cancelAnimationFrame","mozCancelAnimationFrame","requestID","clearTimeout","arrSlice","Array","forEach","slice","arrMap","map","warn","console","isDef","val","isUndef","Observable","_classCallCheck","this","observers","eventName","sub","obs","push","filter","subscriber","source","data","observer","onMove","onRotate","onResize","onApply","onRefreshState","Helper_","params","helper_classCallCheck","selector","document","querySelectorAll","length","count","nodeType","Subjx","_typeof","isArray","helper_createClass","prop","methods","setStyle","options","obj","len","style","_setStyle","getStyle","currentStyle","defaultView","getComputedStyle","includes","replace","_getStyle","apply","arguments","concat","node","sel","Helper","fn","arr","index","events","addEventListener","attachEvent","listenerDelegate","removeEventListener","detachEvent","_sel","el","evt","handler","act","doit","event","target","matches","parentNode","getOffset","getBoundingClientRect","getTransform","css","parseTransform","a","b","match","shift","item","Number","parseMatrix","transform","parseFloat","addClass","cls","classList","indexOf","add","split","cl","unitRE","RAD","Math","PI","DEG","recalcPoint","x","y","centerX","centerY","angle","newCenterX","newCenterY","oldCoords","getRotatedPoint","coords","nx","left","ny","top","resX","floatToFixed","resY","snapToGrid","snap","result","snapCandidate","gridSize","round","rotatedTopLeft","width","height","rotationAngle","revX","revY","cx","cy","dx","dy","rotatedTopLeftAngle","atan2","radius","sqrt","pow","cos","sin","ry","toPX","parent","test","fromPX","toUnit","getUnitDimension","toFixed","Subject","subject_classCallCheck","constructor","TypeError","storage","Ob","_onMouseDown","_onTouchStart","_onMouseMove","_onTouchMove","_onMouseUp","_onTouchEnd","_load","_init","remove","removeClass","_destroy","each","move","resize","rotate","_options$snap","_options$each","subscribe","drop","isFunc","e","ctx","animate","store","frame","doDraw","handle","handles","ch","cw","refang","pressang","pageX","pageY","center","parentScale","doDrag","doResize","doRotate","scaleX","scaleY","_store$each","moveEach","rotateEach","pos","is","br","mr","tl","ml","tr","tc","dox","doy","bl","bc","_resize","diffTop","diffLeft","_drag","notify","radians","_rotate","stopImmediatePropagation","computed","_compute","ctrlKey","shiftKey","keys","onRightEdge","onBottomEdge","onTopEdge","onLeftEdge","factor","rotator","_draw","preventDefault","action","_apply","_start","on","touches","_moving","_end","off","changedTouches","w","h","actionName","Draggable","_this","html_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","enable","wrapper","createElement","insertBefore","container","_parent","controls","innerHTML","appendChild","_controls","_container","assign","find","querySelector","display","removeChild","processMove","processRotate","processResize","window","postMessage","_el","cached","dimens","matrix","_toConsumableArray","matrixToCSS","pW","pH","isTextDrag","contains","position","recalc","_this$storage","ctrls","tl_off","tr_off","styleList","parentTransform","coordX","coordY","leftSide","rightSide","clientWidth","offset_","center_x","center_y","canResizeWithShiftKey","isText","scaleHeight","newHeight","clientHeight","offsetHeight","resultY","resultX","transformOrigin","size","props","elDrag","elDragContainer","elDragClient","floor","right","bottom","abs","join","webkitTranform","mozTransform","msTransform","otransform","dRE","sepRE","parsePath","path","lastIndex","serialized","exec","cmd","upCmd","toUpperCase","relative","trim","isNaN","setCoord","diff","fixed","dist","setRelativeCoord","getFactor","ROT_OFFSET","floatRE","translateRE","DraggableSVG","svg_classCallCheck","svg_possibleConstructorReturn","svg_getPrototypeOf","createSVG","_sel$getBBox","getBBox","getAttribute","box","setAttribute","group","items","fill","stroke","createHandler","_this2","translate","_box$getBBox","newWidth","applyTransformToHandles","removeAttribute","els","tagName","toLowerCase","childNodes","element","attrs","resX1","resY1","resX2","resY2","parsePoints","str","firstCommand","values","movePath","applyTranslate","diffX","diffY","isGroup","bBox","boxX","boxY","boxW","boxH","fixedX","fixedY","baseData","_recalcPoint","svg_objectSpread","newR","_recalcPoint2","_recalcPoint3","rx","_recalcPoint4","_recalcPoint5","resX1_","resY1_","_recalcPoint6","resX2_","resY2_","_recalcPoint7","res","_values","_slicedToArray","x_axis_rot","large_arc_flag","sweep_flag","factorX","factorY","newRx","newRy","_objectSpread","_values2","x1","y1","x2","y2","factorY1","factorX2","factorY2","resX3","resY3","_values3","_recalcPoint8","_values4","_recalcPoint9","_recalcPoint10","_values5","_recalcPoint11","_recalcPoint12","resizePath","attr","applyResize","_this$storage3","c_left","c_top","boxOffset","orig","_this$storage2","scale","_this$storage4","ptX","ptY","scaleString","oldTransform","_this$storage5","originTransform","transformString","newTransform","_this$storage6","hdl","createElementNS","halfWidth","halfHeight","boxAttrs","pts","reduce","array","js_classCallCheck","js_possibleConstructorReturn","js_getPrototypeOf","method","SVGElement","__webpack_exports__"],"mappings":"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","file":"js/subjx.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","export const requestAnimFrame = requestAnimationFrame ||\n        mozRequestAnimationFrame ||\n        webkitRequestAnimationFrame ||\n        msRequestAnimationFrame ||\n        function(f) {\n            return setTimeout(f, 1000 / 60);\n        };\n\nexport const cancelAnimFrame = cancelAnimationFrame ||\n        mozCancelAnimationFrame ||\n        function(requestID) {\n            clearTimeout(requestID);\n        };\n\nexport const forEach = Array.prototype.forEach,\n        arrSlice = Array.prototype.slice,\n        arrMap = Array.prototype.map,\n        warn = console.warn;\n\nexport function isDef(val) {\n    return val !== undefined && val !== null;\n}\n\nexport function isUndef(val) {\n    return val === undefined || val === null;\n}\n\nexport function isFunc(val) {\n    return typeof val === 'function';\n}","import { isUndef } from \"../util/util\";\n\nexport default class Observable {\n  \n    constructor() {\n        this.observers = {};\n    }\n  \n    subscribe(eventName, sub) {\n\n        const obs = this.observers;\n     \n        if (isUndef(obs[eventName])) {\n            Object.defineProperty(obs, eventName, {\n                value: []\n            });\n        }\n\n        obs[eventName].push(sub);\n    }\n  \n    unsubscribe(f) {\n       this.observers = this.observers.filter(subscriber => subscriber !== f);\n    }\n\n    notify(eventName, source, data) {\n        if (isUndef(this.observers[eventName])) return;\n\n        this.observers[eventName].forEach(observer => {\n            if (source === observer) return;\n            switch (eventName) {\n                case 'onmove':\n                    observer.onMove(data);\n                    break\n                case 'onrotate':\n                    observer.onRotate(data);\n                    break\n                case 'onresize':\n                    observer.onResize(data);\n                    break\n                case 'onapply':\n                    observer.onApply(data);\n                    break\n                case 'onrefreshstate':\n                    observer.onRefreshState(data);\n                    break\n                default: \n                    break\n            }\n        });\n    }\n}","import {\n    arrSlice,\n    warn\n} from './util/util'\n\nexport class Helper_ {\n\n    constructor(params) {\n\n        if (!params) return this;\n\n        if (typeof params === 'string') {\n            let selector = document.querySelectorAll(params);\n            this.length = selector.length;\n            for (let count = 0; count < this.length; count++) {\n                this[count] = selector[count];\n            }\n        } else if (params.nodeType === 1 || params === document) {\n            this[0] = params;\n            this.length = 1;\n        } else if (params instanceof Subjx || typeof params === 'object') {\n            this.length = params.length;\n            for (let count = 0; count < this.length; count++) {\n                this[count] = params[count];\n            }\n        } else if (Array.isArray(params)) {\n            this.length = 0;\n            for (let count = 0; count < this.length; count++) {\n                if (params.nodeType === 1) {\n                    this[count] = params[count];\n                    this.length++;\n                }\n            }\n        }\n        return this;\n    }\n\n    css(property) {\n        return _css.call(this, property);\n    }\n    find(node) {\n        return _find.call(this, node);\n    }\n    each(fn) {\n        return _each.call(this, fn);\n    }\n    on() {\n        return _on.apply(this, arguments);\n    }\n    off() {\n        return _off.apply(this, arguments);\n    }\n    is(selector) {\n        return _is.call(this, selector);\n    }\n}\n\nfunction _css(prop) {\n\n    const methods = {\n        setStyle(options) {\n            return _setStyle(this, options);\n        },\n\n        getStyle() {\n            return _getStyle(this);\n        }\n    };\n\n    if (typeof prop === 'string') {\n        return methods.getStyle.apply(this, arrSlice.call(arguments, 1));\n    } else if (typeof prop === 'object' || !prop) {\n        return methods.setStyle.apply(this, arguments);\n    } else {\n        warn(`Method ${prop} does not exist`);\n    }\n    return false;\n\n\n    function _getStyle(obj) {\n\n        let len = obj.length;\n\n        while (len--) {\n            if (obj[len].currentStyle) {\n                return obj[len].currentStyle[prop];\n            } else if (document.defaultView && document.defaultView.getComputedStyle) {\n                if (prop.includes('transform')) {\n                    const exponentRegexp180 = /-?1.22465e-16/g;\n                    const exponentRegexp90 = /6.12323e-17/g;\n                    return document.defaultView.getComputedStyle(obj[len], '')[prop].replace(exponentRegexp180, '0').replace(exponentRegexp90, '0');\n                }\n                return document.defaultView.getComputedStyle(obj[len], '')[prop];\n            } else {\n                return obj[len].style[prop];\n            }\n        }\n    }\n\n    function _setStyle(obj, options) {\n\n        let len = obj.length;\n\n        while (len--) {\n            for (let property in options) {\n                obj[len].style[property] = options[property];\n            }\n        }\n        return obj.style;\n    }\n}\n\nfunction _each(fn) {\n\n    const arr = arrSlice.call(this, 0);\n\n    for (let index = arr.length - 1; index >= 0; --index) {\n        let func = function() {\n            return arr[index];\n        };\n        fn.call(func());\n    }\n    return this;\n}\n\nfunction _find(sel) {\n\n    let len = this.length,\n        selector;\n\n    while (len--) {\n        selector = this[len].querySelectorAll(sel);\n        return Helper(selector);\n    }\n}\n\nfunction _on() {\n\n    let len = this.length;\n\n    while (len--) {\n\n        if (!this[len].events) {\n            this[len].events = {};\n            this[len].events[arguments[0]] = [];\n        }\n\n        if (arguments.length === 2) {\n\n            if (document.addEventListener) {\n                this[len].addEventListener(arguments[0], arguments[1], false);\n            } else if (document.attachEvent) {\n                this[len].attachEvent(`on${arguments[0]}`, arguments[1]);\n            } else {\n                this[len][`on${arguments[0]}`] = arguments[1];\n            }\n\n        } else if (arguments.length === 3 && typeof(arguments[1]) === 'string') {\n            listenerDelegate(this[len], arguments[0], arguments[1], arguments[2], true);\n        }\n    }\n    return this;\n}\n\nfunction _off() {\n\n    let len = this.length;\n\n    while (len--) {\n\n        if (!this[len].events) {\n            this[len].events = {};\n            this[len].events[arguments[0]] = [];\n        }\n\n        if (arguments.length === 2) {\n            if (document.removeEventListener) {\n                this[len].removeEventListener(arguments[0], arguments[1], false);\n            } else if (document.detachEvent) {\n                this[len].detachEvent(`on${arguments[0]}`, arguments[1]);\n            } else {\n                this[len][`on${arguments[0]}`] = null;\n            }\n\n        } else if (arguments.length === 3 && typeof(arguments[1]) === 'string') {\n            listenerDelegate(this[len], arguments[0], arguments[1], arguments[2], false);\n        }\n    }\n\n    return this;\n}\n\nfunction _is(selector) {\n\n    const _sel = Helper(selector);\n    let len = this.length;\n\n    while (len--) {\n        if (this[len] === _sel[len]) return true;\n    }\n    return false;\n}\n\nfunction listenerDelegate(el, evt, sel, handler, act) {\n\n    const doit = function(event) {\n        let t = event.target;\n        while (t && t !== this) {\n            if (t.matches(sel)) {\n                handler.call(t, event);\n            }\n            t = t.parentNode;\n        }\n    };\n\n    if (act === true) {\n        if (document.addEventListener) {\n            el.addEventListener(evt, doit, false);\n        } else if (document.attachEvent) {\n            el.attachEvent(`on${evt}`, doit);\n        } else {\n            el[`on${evt}`] = doit;\n        }\n    } else {\n        if (document.removeEventListener) {\n            el.removeEventListener(evt, doit, false);\n        } else if (document.detachEvent) {\n            el.detachEvent(`on${evt}`, doit);\n        } else {\n            el[`on${evt}`] = null;\n        }\n    }\n}\n\nexport function Helper(params) {\n    return new Helper_(params);\n}","export function getOffset(node) {\n    return node.getBoundingClientRect();\n}\n\nexport function getTransform(el) {\n    const transform = el.css('-webkit-transform') ||\n        el.css('-moz-transform') ||\n        el.css('-ms-transform') ||\n        el.css('-o-transform') ||\n        el.css('transform') ||\n        'none';\n    return transform;\n}\n\nexport function parseTransform(a) {\n    const b = {};\n\n    for (let i in a = a.match(/(\\w+\\((\\-?\\d+\\.?\\d*e?\\-?\\d*(?:,|\\s)?)+\\))+/g)) {\n        const c = a[i].match(/[\\w\\.\\-]+/g);\n        b[c.shift()] = c.map(item => { return Number(item); });\n    }\n    return b;\n}\n\nexport function parseMatrix(el) {\n    // matrix(scaleX(),skewY(),skewX(),scaleY(),translateX(),translateY())\n    const transform = getTransform(el).match(/-?\\d+\\.?\\d+|-?\\d+/g);\n\n    if (transform) {\n        return transform.map(item => {\n            return parseFloat(item);\n        });\n    } else {\n        return [1, 0, 0, 1, 0, 0];\n    }\n}\n\nexport function addClass(node, cls) {\n    if (!cls) return;\n\n    if (node.classList) {\n        if (cls.indexOf(' ') > -1) {\n            cls.split(/\\s+/).forEach(function(cl) {\n                return node.classList.add(cl);\n            });\n        } else {\n            return node.classList.add(cls);\n        }\n    }\n    return node;\n}\n\nexport function removeClass(node, cls) {\n    if (!cls) return;\n\n    if (node.classList) {\n        if (cls.indexOf(' ') > -1) {\n            cls.split(/\\s+/).forEach(function(cl) {\n                return node.classList.remove(cl);\n            });\n        } else {\n            return node.classList.remove(cls);\n        }\n    }\n    return node;\n}","export const unitRE = /px|em|%|ex|ch|rem|vh|vw|vmin|vmax|mm|cm|in|pt|pc|deg/;\nexport const RAD = Math.PI / 180;\nexport const DEG = 180 / Math.PI;\n\nexport function recalcPoint(params) {\n\n    const { \n        x, \n        y, \n        centerX,\n        centerY,\n        angle,\n        newCenterX,\n        newCenterY\n    } = params;\n\n    const oldCoords = getRotatedPoint(\n        centerX,\n        centerY,\n        x,\n        y,\n        angle,\n        false,\n        false\n    );\n\n    const coords = getRotatedPoint(\n        newCenterX,\n        newCenterY,\n        x,\n        y,\n        angle,\n        false,\n        false\n    );\n\n    const nx = x - (oldCoords.left - coords.left),\n        ny = y - (oldCoords.top - coords.top);\n\n    return {\n        resX: floatToFixed(nx),\n        resY: floatToFixed(ny)\n    }\n}\n\nexport function snapToGrid(value, snap) {\n    if (snap === 0) {\n        return value;\n    } else {\n        const result = snapCandidate(value, snap);\n\n        if (result - value < snap) {\n            return result;\n        }\n    }\n}\n\nexport function snapCandidate(value, gridSize) {\n    if (gridSize === 0) return value;\n    return gridSize * Math.round(value / gridSize);\n}\n\nexport function rotatedTopLeft(\n    x, \n    y, \n    width, \n    height, \n    rotationAngle, \n    revX, \n    revY\n) {\n\n    const cx = x + parseFloat(width) / 2,\n        cy = y + parseFloat(height) / 2;\n\n    const dx = x - cx,\n        dy = y - cy;\n\n    const originalTopLeftAngle = Math.atan2(dy, dx);\n\n    const rotatedTopLeftAngle = originalTopLeftAngle + rotationAngle;\n\n    const radius = Math.sqrt(Math.pow(parseFloat(width) / 2, 2) + Math.pow(parseFloat(height) / 2, 2));\n            \n    let cos = Math.cos(rotatedTopLeftAngle), \n        sin = Math.sin(rotatedTopLeftAngle);\n\n    cos = revX === true ? -cos : cos;\n    sin = revY === true ? -sin : sin;\n\n    const rx = cx + radius * cos,\n        ry = cy + radius * sin;\n\n    return {\n        left: floatToFixed(rx),\n        top: floatToFixed(ry)\n    }\n}\n\nexport function getRotatedPoint(\n    cx, \n    cy, \n    x, \n    y, \n    angle, \n    revX, \n    revY\n) {\n\n    let cos = Math.cos(angle),\n        sin = Math.sin(angle);\n\n    cos = revX === true ? -cos : cos;\n    sin = revY === true ? -sin : sin;\n\n    let nx = (cos * (x - cx)) + (sin * (y - cy)) + cx,\n        ny = (cos * (y - cy)) - (sin * (x - cx)) + cy;\n\n    return {\n        left: floatToFixed(nx),\n        top: floatToFixed(ny)\n    }\n}\n\nexport function toPX(value, parent) {\n    if (/px/.test(value)) {\n        return value;\n    }\n    if (/%/.test(value)) {\n        return `${parseFloat(value) * parseFloat(parent) / 100}px`;\n    }\n}\n\nexport function fromPX(value, parent, toUnit) {\n    if (/px/.test(toUnit)) {\n        return value;\n    }\n    if (/%/.test(toUnit)) {\n        return `${parseFloat(value) * 100 / parseFloat(parent)}%`;\n    }\n}\n\nexport function getUnitDimension(value) {\n    return value.match(unitRE)[0];\n}\n\nexport function floatToFixed(val) {\n    return Number(val.toFixed(6));\n}\n","import { Helper } from '../helper'\n\nimport {\n    requestAnimFrame,\n    cancelAnimFrame,\n    isDef,\n    isUndef,\n    isFunc\n} from '../util/util'\n\nimport {\n    addClass,\n    removeClass\n} from '../util/css-util'\n\nimport {\n    getRotatedPoint,\n    RAD\n} from './common'\n\nexport default class Subject {\n\n    constructor(el, Observable) {\n\n        if (this.constructor === Subject) {\n            throw new TypeError('Cannot construct Subject instances directly');\n        }\n\n        this.el = el;\n        this.storage = null;\n        this.Ob = Observable;\n\n        this._onMouseDown = this._onMouseDown.bind(this);\n        this._onTouchStart = this._onTouchStart.bind(this);\n        this._onMouseMove = this._onMouseMove.bind(this);\n        this._onTouchMove = this._onTouchMove.bind(this);\n        this._onMouseUp = this._onMouseUp.bind(this);\n        this._onTouchEnd = this._onTouchEnd.bind(this);\n    }\n\n    enable(options) {\n\n        if (isUndef(this.storage)) {\n            this._load(options);\n            this._init(this.el);\n        } else {\n            warn('Already enabled');\n        }\n    }\n\n    disable() {\n\n        const {\n            storage,\n            el\n        } = this;\n\n        if (isUndef(storage)) return;\n\n        removeClass(el, 'dg-drag');\n        this._destroy(); \n\n        delete this.storage;  \n    }\n\n    _load(options) {\n        loadOptions.call(this, options);\n    }\n\n    _draw() {\n\n        const ctx = this;\n\n    \n        function animate() {\n            const store = ctx.storage;\n\n            store.frame = requestAnimFrame(animate);\n    \n            if (!store.doDraw) return;\n            store.doDraw = false;\n\n            let { \n                handle,\n                handles,\n                cx,\n                cy,\n                ch,\n                cw,\n                refang,\n                pressang,\n                pageX,\n                pageY,\n                center,\n                snap,\n                parentScale,\n                doDrag,\n                doResize,\n                doRotate\n            } = store;\n\n            const scaleX = parentScale[0],\n                scaleY = parentScale[1];\n    \n            let { \n                    move: moveEach, \n                    resize: resizeEach, \n                    rotate: rotateEach\n                } = store.each;\n    \n            if (doResize) {\n    \n                let revX, revY, x, y, pos;\n    \n                let width = null,\n                    height = null;\n    \n                if (handle.is(handles.br) || handle.is(handles.mr)) {\n                    pos = getRotatedPoint(\n                        cx, \n                        cy,\n                        pageX,\n                        pageY,\n                        refang,\n                        false, \n                        false\n                    );\n                    pageY = pos.top;\n                    pageX = pos.left;\n\n                    y = (pageY - cy) / scaleY;\n                    x = (pageX - cx) / scaleX;\n\n                    let doy = handle.is(handles.br);\n    \n                    if (doy) { height = y + ch; }\n                    width = x + cw;\n    \n                    revX = false;\n                    revY = false;\n    \n                } else if (handle.is(handles.tl) || handle.is(handles.ml)) {\n\n                    pos = getRotatedPoint(\n                        cx, \n                        cy, \n                        pageX, \n                        pageY, \n                        refang, \n                        false, \n                        false\n                    );\n                    pageY = pos.top;\n                    pageX = pos.left;\n    \n                    y = - (pageY - cy) / scaleY;\n                    x = - (pageX - cx) / scaleX;\n    \n                    let doy = handle.is(handles.tl);\n    \n                    width = x + cw;\n                    if (doy) { height = y + ch; }\n    \n                    revX = true;\n                    revY = true;\n\n                } else if (handle.is(handles.tr) || handle.is(handles.tc)) {\n    \n                    let dox = handle.is(handles.tr);\n                    let doy = handle.is(handles.tc);\n\n                    pos = getRotatedPoint(\n                        cx, \n                        cy, \n                        pageX, \n                        pageY, \n                        refang, \n                        dox, \n                        false\n                    );\n    \n                    pageY = pos.top;\n                    pageX = pos.left;\n    \n                    y = - (pageY - cy) / scaleY;\n                    x = - (pageX - cx) / scaleX;\n    \n                    if (dox) { y = -y; }\n    \n                    height = y + ch;\n                    if (dox) { width = x + cw; }\n\n                    revX = doy;\n                    revY = true;\n    \n                } else if (handle.is(handles.bl) || handle.is(handles.bc)) {\n    \n                    let dox = handle.is(handles.bl);\n\n                    pos = getRotatedPoint(\n                        cx, \n                        cy, \n                        pageX, \n                        pageY, \n                        refang, \n                        false, \n                        dox\n                    );\n    \n                    pageY = pos.top;\n                    pageX = pos.left;\n    \n                    y = (pageY - cy) / scaleY;\n                    x = - (pageX - cx) / scaleX;\n    \n                    height = y + ch;\n                    if (dox) { width = x + cw; }\n                    revX = dox;\n\n                    revY = false;\n                }\n\n\n                ctx._resize(\n                    width,\n                    height,\n                    revX,\n                    revY,\n                    x,\n                    y\n                );\n    \n\n            }\n    \n            if (doDrag) {\n    \n                const diffTop = (pageY - cy) / scaleY, \n                    diffLeft = (pageX - cx) / scaleX; \n\n                ctx._drag(\n                    diffTop, \n                    diffLeft,\n                );\n    \n                if (moveEach) {\n                    ctx.Ob.notify('onmove',\n                        ctx,\n                        {\n                            diffTop,\n                            diffLeft\n                        }\n                    );\n                }\n            }\n    \n            if (doRotate) {\n\n                const radians = Math.atan2(\n                    pageY - center.y, \n                    pageX - center.x\n                ) - pressang;\n    \n                ctx._rotate(\n                    radians\n                );\n    \n                if (rotateEach) {\n                    ctx.Ob.notify('onrotate',\n                        ctx,\n                        {\n                            radians\n                        }\n                    );\n                }\n            }\n        }\n        animate();\n    }\n\n    _start(e) {\n\n        if (e.stopImmediatePropagation) {\n            e.stopImmediatePropagation();\n        }\n\n        const store = this.storage;\n        const computed = this._compute(e);\n\n        store.pageX = e.pageX;\n        store.pageY = e.pageY;\n        store.cx = e.pageX;\n        store.cy = e.pageY;\n        store.ctrlKey = e.ctrlKey;\n        store.shiftKey = e.shiftKey;\n\n        Object.keys(computed).forEach(prop => {\n            store[prop] = computed[prop];\n        });\n\n        const {\n            onRightEdge,\n            onBottomEdge,\n            onTopEdge,\n            onLeftEdge,\n            handle,\n            factor,\n            revX,\n            revY\n        } = computed;\n\n        const doResize = onRightEdge ||\n                        onBottomEdge ||\n                        onTopEdge ||\n                        onLeftEdge;\n\n        const doRotate = handle.is(store.handles.rotator);\n\n        store.doResize = doResize;\n        store.doDrag = !doRotate && !doResize;\n        store.doRotate = doRotate;\n\n        if (this.Ob) {\n            this.Ob.notify(\n                'onrefreshstate',\n                this,\n                {\n                    factor,\n                    revX,\n                    revY,\n                    onTopEdge,\n                    onLeftEdge,\n                    onRightEdge,\n                    onBottomEdge\n                }\n            );\n        }\n\n        this._draw();\n    }\n\n    _moving(e) {\n\n        if (e.preventDefault) {\n            e.preventDefault();\n        }\n        \n        const store = this.storage;\n        store.pageX = e.pageX;\n        store.pageY = e.pageY;\n        store.doDraw = true;\n    }\n    \n    _end(e) {\n\n        if (e.stopImmediatePropagation) {\n            e.stopImmediatePropagation();\n        }\n\n        const store = this.storage;\n\n        const action = store.doResize ? 'resize' : (store.doDrag ? 'drag' : 'rotate');\n\n        store.doResize = false;\n        store.doDrag = false;\n        store.doRotate = false;\n        store.doDraw = false;\n\n        this._apply(action);\n\n        if (this.Ob) {\n            this.Ob.notify(\n                'onapply',\n                this,\n                action\n            );\n        }\n\n        cancelAnimFrame(store.frame);\n        store.drop.call(this, e);\n    }\n\n    _onMouseDown(e) {\n        this._start(e);\n        Helper(document).on('mousemove', this._onMouseMove)\n                        .on('mouseup', this._onMouseUp);\n    }\n\n    _onTouchStart(e) {\n        this._start(e.touches[0]);\n        Helper(document).on('touchmove', this._onTouchMove)\n                        .on('touchend', this._onTouchEnd);\n    }\n\n    _onMouseMove(e) {\n        this._moving(e, this.el);\n    }\n\n    _onTouchMove(e) {\n        this._moving(e.touches[0], this.el);\n    }\n\n    _onMouseUp(e) {\n        this._end(e, this.el);\n        Helper(document).off('mousemove', this._onMouseMove)\n                        .off('mouseup', this._onMouseUp);                        \n    }\n\n    _onTouchEnd(e) {\n        if (e.touches.length === 0) {\n            this._end(e.changedTouches[0], this.el);\n        }\n        Helper(document).off('touchmove', this._onTouchMove)\n                        .off('touchend', this._onTouchEnd);\n    }\n\n    onMove(data) {\n\n        this._drag(\n            data.diffTop, \n            data.diffLeft\n        );\n    }\n\n    onRotate(data) {\n\n        this._rotate(\n            data.radians\n        );\n    }\n\n    onResize(data) {\n    \n        const w = data.width !== null ? this.storage.cw + data.x : null;\n        const h = data.height !== null ? this.storage.ch + data.y : null;\n\n       this._resize(\n            w,\n            h,\n            data.revX,\n            data.revY\n        );\n    }\n\n    onApply(actionName) {\n        this._apply(actionName);\n    }\n}\n\nfunction loadOptions(options) {\n\n    addClass(this.el, 'dg-drag');\n\n    let snap = {\n        x: 10,\n        y: 10,\n        angle: 10 * RAD\n    };\n\n    let each = {\n        move: false,\n        resize: false,\n        rotate: false\n    }\n\n    if (isDef(options)) {\n\n        if (isDef(options.snap)) {\n\n            const { x, y, angle } = options.snap;\n\n            snap.x = isUndef(x) ? 10 : x;\n            snap.y = isUndef(y) ? 10 : y;\n            snap.angle = isUndef(angle) ? 1 * RAD : angle * RAD;\n        }\n        \n        if (isDef(options.each)) {\n\n            const { move, resize, rotate } = options.each;\n\n            each.move = move || false;\n            each.resize = resize || false;\n            each.rotate = rotate || false; \n        }    \n    }\n\n    const Ob = this.Ob;\n\n    if (each.move || each.resize || each.rotate) {\n        Ob.subscribe('onrefreshstate', this);\n        Ob.subscribe('onapply', this);\n    }\n\n    if (each.move) {\n        Ob.subscribe('onmove', this);\n    }\n    if (each.resize) {\n        Ob.subscribe('onresize', this);\n    }\n    if (each.rotate) {\n        Ob.subscribe('onrotate', this);\n    }\n\n    this.storage = {\n        drop: options && isFunc(options.drop) \n                ? function(e) {\n                    options.drop(e, this.el);\n                } \n                : function() {},\n        snap,\n        each\n    };\n}\n","import { Helper } from '../helper'\nimport Subject from './subject'\n\nimport {\n    addClass,\n    getTransform,\n    parseMatrix,\n    getOffset\n} from '../util/css-util'\n\nimport {\n    snapToGrid,\n    snapCandidate,\n    rotatedTopLeft,\n    toPX,\n    fromPX,\n    getUnitDimension,\n    floatToFixed, getRotatedPoint\n} from './common'\n\nconst brackets = '<div class=\"dg-hdl dg-rotator\"></div>\\\n        <div class=\"dg-hdl dg-hdl-t dg-hdl-l dg-hdl-tl\"></div>\\\n        <div class=\"dg-hdl dg-hdl-t dg-hdl-r dg-hdl-tr\"></div>\\\n        <div class=\"dg-hdl dg-hdl-b dg-hdl-r dg-hdl-br\"></div>\\\n        <div class=\"dg-hdl dg-hdl-b dg-hdl-l dg-hdl-bl\"></div>\\\n        <div class=\"dg-hdl dg-hdl-t dg-hdl-c dg-hdl-tc\"></div>\\\n        <div class=\"dg-hdl dg-hdl-b dg-hdl-c dg-hdl-bc\"></div>\\\n        <div class=\"dg-hdl dg-hdl-m dg-hdl-l dg-hdl-ml\"></div>\\\n        <div class=\"dg-hdl dg-hdl-m dg-hdl-r dg-hdl-mr\"></div>';\n\nexport default class Draggable extends Subject {\n\n    constructor(el, options, Observable) {\n        super(el, Observable);\n        this.enable(options);\n    }\n\n    _init(item, options) {\n        _init.call(this, item, options);\n    }\n\n    _destroy(item) {\n        _destroy.call(this, item);\n    }\n\n    _drag() {\n        processMove.call(this, ...arguments);\n    }\n\n    _rotate() {\n        processRotate.call(this, ...arguments);\n    }\n\n    _resize() {\n        processResize.call(this, ...arguments);\n    }\n\n    _compute() {\n        return _compute.call(this, ...arguments);\n    }\n\n    _apply() {\n        window.parent.postMessage({ event: 'apply-from-iframe' }, 'http://127.0.0.1:3978/#/edit');\n        const {\n            storage,\n            el\n        } = this;\n\n        const _el = Helper(el);\n\n        const {\n            cached,\n            parent,\n            dimens,\n            handle,\n            controls\n        } = storage;\n\n        if (!cached) return;\n\n        const matrix = [...cached];\n\n        const diffLeft = matrix[4];\n        const diffTop = matrix[5];\n\n        // matrix[4] = 0;\n        // matrix[5] = 0;\n\n        const css = matrixToCSS(matrix);\n\n        const pW = parent.css('width'),\n            pH = parent.css('height');\n\n        const left = parseFloat(\n            toPX(_el.css('left'), pW)\n        );\n        const top = parseFloat(\n            toPX(_el.css('top'), pH)\n        );\n\n        css.left = fromPX(\n            left + diffLeft + 'px',\n            pW,\n            dimens.left\n        );\n\n        css.top = fromPX(\n            top + diffTop + 'px',\n            pH,\n            dimens.top\n        );\n        // _el.css(css);\n        // Helper(controls).css(css);\n        const container = el.querySelector('.text-container');\n        const isTextDrag = handle[0].classList.contains('dg-controls') || !container || (!handle[0].classList.contains('dg-hdl-ml') && !handle[0].classList.contains('dg-hdl-mr'))\n\n        window.parent.postMessage({\n            event: 'resize-on-mouseup', position: {\n                width: controls.style.width,\n                height: controls.style.height,\n                diffLeft,\n                diffTop\n            },\n            isTextDrag: isTextDrag\n        }, 'http://127.0.0.1:3978/#/edit');\n        this.storage.cached = null;\n    }\n\n    onRefreshState(data) {\n        const store = this.storage;\n\n        const recalc = refreshState.call(this,\n            data.factor,\n            data.revX,\n            data.revY\n        );\n\n        Object.keys(recalc).forEach(key => {\n            store[key] = recalc[key];\n        });\n    }\n}\n\nfunction _init(sel) {\n    const wrapper = document.createElement('div');\n\n    addClass(wrapper, 'dg-wrapper');\n    sel.parentNode.insertBefore(wrapper, sel);\n\n    const container = wrapper;\n    const _sel = Helper(sel);\n\n    const w = _sel.css('width'),\n        h = _sel.css('height'),\n        t = _sel.css('top'),\n        l = _sel.css('left');\n\n    const _parent = Helper(container.parentNode);\n\n    const css = {\n        top: t,\n        left: l,\n        width: toPX(w, _parent.css('width')),\n        height: toPX(h, _parent.css('height')),\n        transform: getTransform(_sel)\n    };\n\n    const controls = document.createElement('div');\n    controls.innerHTML = brackets;\n\n    addClass(controls, 'dg-controls');\n\n    container.appendChild(controls);\n\n    const _controls = Helper(controls);\n    _controls.css(css);\n\n    const _container = Helper(container);\n\n    Object.assign(this.storage, {\n        controls: controls,\n        handles: {\n            tl: _container.find('.dg-hdl-tl'),\n            tr: _container.find('.dg-hdl-tr'),\n            br: _container.find('.dg-hdl-br'),\n            bl: _container.find('.dg-hdl-bl'),\n            tc: _container.find('.dg-hdl-tc'),\n            bc: _container.find('.dg-hdl-bc'),\n            ml: _container.find('.dg-hdl-ml'),\n            mr: _container.find('.dg-hdl-mr'),\n            rotator: _container.find('.dg-rotator')\n        },\n        parent: _parent\n    });\n\n    _controls.on('mousedown', this._onMouseDown)\n        .on('touchstart', this._onTouchStart);\n    const textContainer = _sel[0].querySelector('.text-container');\n    if (textContainer) {\n        _container.find('.dg-hdl-bc')[0].style.display = 'none';\n        _container.find('.dg-hdl-tc')[0].style.display = 'none';\n    }\n}\n\nfunction _destroy() {\n    const { controls } = this.storage;\n\n    Helper(controls).off('mousedown', this._onMouseDown)\n        .off('touchstart', this._onTouchStart);\n\n    this.el.parentNode.removeChild(controls.parentNode);\n}\n\nfunction _compute(e) {\n    window.parent.postMessage({ event: 'compute-from-iframe' }, 'http://127.0.0.1:3978/#/edit');\n    const {\n        el,\n        storage\n    } = this;\n\n    const {\n        handles,\n        controls: ctrls,\n        parent,\n        snap\n    } = storage;\n\n    const handle = Helper(e.target);\n    const container = el.querySelector('.text-container');\n    const leftSide = handle[0].classList.contains('dg-hdl-ml');\n    const rightSide = handle[0].classList.contains('dg-hdl-mr');\n    if (container && !leftSide && !rightSide) {\n        container.style.width = `${el.clientWidth}px`;\n    }\n    let factor = 1;\n\n    //reverse axis\n    const revX = handle.is(handles.tl) ||\n        handle.is(handles.ml) ||\n        handle.is(handles.bl) ||\n        handle.is(handles.tc);\n\n    const revY = handle.is(handles.tl) ||\n        handle.is(handles.tr) ||\n        handle.is(handles.tc) ||\n        handle.is(handles.ml);\n\n    //reverse angle\n    if (handle.is(handles.tr) ||\n        handle.is(handles.bl)\n    ) {\n        factor = -1;\n    }\n\n    const tl_off = getOffset(handles.tl[0]),\n        tr_off = getOffset(handles.tr[0]);\n\n    const refang = Math.atan2(\n        tr_off.top - tl_off.top,\n        tr_off.left - tl_off.left\n    ) * factor;\n\n    const cw = parseFloat(\n        toPX(ctrls.style.width, parent.css('width'))\n    );\n    const ch = parseFloat(\n        toPX(ctrls.style.height, parent.css('height'))\n    );\n\n    const transform = parseMatrix(Helper(ctrls));\n    //getting current coordinates considering rotation angle\n    const coords = rotatedTopLeft(\n        transform[4],\n        transform[5],\n        cw,\n        ch,\n        refang,\n        revX,\n        revY\n    );\n    const offset_ = getOffset(ctrls);\n\n    const center_x = offset_.left + cw / 2,\n        center_y = offset_.top + ch / 2;\n\n    const pressang = Math.atan2(\n        e.pageY - center_y,\n        e.pageX - center_x\n    );\n\n    const _el = Helper(el);\n    const styleList = el.style;\n\n    const dimens = {\n        top: getUnitDimension(styleList.top || _el.css('top')),\n        left: getUnitDimension(styleList.left || _el.css('left')),\n        width: getUnitDimension(styleList.width || _el.css('width')),\n        height: getUnitDimension(styleList.height || _el.css('height'))\n    };\n\n    const parentTransform = parseMatrix(parent);\n\n    return {\n        parentScale: [parentTransform[0], parentTransform[3]],\n        transform,\n        cw,\n        ch,\n        center: {\n            x: center_x,\n            y: center_y\n        },\n        left: snapCandidate(transform[4], snap.x),\n        top: snapCandidate(transform[5], snap.y),\n        coordY: coords.top,\n        coordX: coords.left,\n        factor,\n        pressang,\n        refang,\n        revX,\n        revY,\n        handle,\n        onTopEdge: handle.is(handles.tl) || handle.is(handles.tc) || handle.is(handles.tr),\n        onLeftEdge: handle.is(handles.tl) || handle.is(handles.ml) || handle.is(handles.bl),\n        onRightEdge: handle.is(handles.tr) || handle.is(handles.mr) || handle.is(handles.br),\n        onBottomEdge: handle.is(handles.br) || handle.is(handles.bc) || handle.is(handles.bl),\n        dimens\n    }\n}\n\nfunction refreshState(factor, revX, revY) {\n\n    const {\n        controls: ctrls,\n        handles,\n        parent,\n        snap\n    } = this.storage;\n\n    const tl_off = getOffset(handles.tl[0]),\n        tr_off = getOffset(handles.tr[0]);\n\n    const refang = Math.atan2(\n        tr_off.top - tl_off.top,\n        tr_off.left - tl_off.left\n    ) * factor;\n\n    const cw = parseFloat(\n        toPX(ctrls.style.width, parent.css('width'))\n    );\n    const ch = parseFloat(\n        toPX(ctrls.style.height, parent.css('height'))\n    );\n\n    const transform = parseMatrix(Helper(ctrls));\n\n    //getting current coordinates considering rotation angle\n    const coords = rotatedTopLeft(\n        transform[4],\n        transform[5],\n        cw,\n        ch,\n        refang,\n        revX,\n        revY\n    );\n\n    const _sel = Helper(this.el);\n    const styleList = this.el.style;\n    return {\n        transform: transform,\n        parentTransform: parseMatrix(parent),\n        left: snapCandidate(transform[4], snap.x),\n        top: snapCandidate(transform[5], snap.y),\n        coordX: coords.left,\n        coordY: coords.top,\n        refang: refang,\n        cw: cw,\n        ch: ch,\n        dimens: {\n            top: getUnitDimension(styleList.top || _sel.css('top')),\n            left: getUnitDimension(styleList.left || _sel.css('left')),\n            width: getUnitDimension(styleList.width || _sel.css('width')),\n            height: getUnitDimension(styleList.height || _sel.css('height'))\n        }\n    }\n}\n\nfunction processResize(\n    width,\n    height,\n    revX,\n    revY\n) {\n\n    const {\n        el,\n        storage\n    } = this;\n\n    const {\n        controls,\n        handle,\n        snap,\n        left,\n        top,\n        coordX,\n        coordY,\n        refang,\n        dimens,\n        parent,\n        transform\n    } = storage;\n\n\n    const { style } = controls;\n\n    if (width !== null) {\n        style.width = `${snapToGrid(width, snap.x)}px`;\n    }\n\n    const canResizeWithShiftKey = handle[0].classList.contains('dg-hdl-br') ||\n        handle[0].classList.contains('dg-hdl-tr') ||\n        handle[0].classList.contains('dg-hdl-bl') ||\n        handle[0].classList.contains('dg-hdl-tl');\n    let isText = false;\n    const container = el.querySelector('.text-container');\n    if (container && canResizeWithShiftKey) {\n        isText = true;\n    }\n    const scaleHeight = storage.ch / storage.cw;\n    if (height !== null) {\n        if ((storage.shiftKey || isText) && canResizeWithShiftKey) {\n            height = width * scaleHeight;\n        }\n        style.height = `${snapToGrid(height, snap.y)}px`;\n    }\n\n    if (container && (handle[0].classList.contains('dg-hdl-mr') || handle[0].classList.contains('dg-hdl-ml'))) {\n        let newHeight = 0;\n        [].forEach.call(container.querySelectorAll('.simple-text-line'), (el) => {\n            newHeight += el.clientHeight || el.offsetHeight;\n        })\n        style.height = !newHeight ? `${snapToGrid(container.parentNode.clientHeight, snap.y)}px` : `${snapToGrid(newHeight, snap.y)}px`;\n    }\n\n    const coords = rotatedTopLeft(\n        left,\n        top,\n        style.width,\n        style.height,\n        refang,\n        revX,\n        revY\n    );\n    let resultY = top - (coords.top - coordY);\n    let resultX = left - (coords.left - coordX);\n\n    const matrix = [...transform];\n\n    if (isText) {\n        container.style.transformOrigin = `top left`;\n        container.style.transform = `scale(${parseFloat(style.width) / storage.cw})`;\n    }\n    matrix[4] = resultX;\n    matrix[5] = resultY;\n\n    const css = matrixToCSS(matrix);\n\n    Helper(controls).css(css);\n\n\n    css.width = fromPX(\n        style.width,\n        parent.css('width'),\n        dimens.width\n    );\n\n    css.height = fromPX(\n        style.height,\n        parent.css('height'),\n        dimens.height\n    );\n\n    const size = {\n        width: css.width,\n        height: css.height,\n    }\n\n\n    Helper(el).css(css);\n    window.parent.postMessage({ event: 'resize-from-package', size: size, isText: isText }, 'http://127.0.0.1:3978/#/edit');\n    storage.cached = matrix;\n}\n\nfunction processMove(\n    top,\n    left\n) {\n    const {\n        el,\n        storage\n    } = this;\n\n    const {\n        controls,\n        transform,\n        snap\n    } = storage;\n\n    const matrix = [...transform];\n\n    const props = {\n        elDrag: el,\n        elDragContainer: document.querySelector('body')\n    }\n\n    if (props.elDrag.name && props.elDrag.name.match('fullscreen')) {\n        props.elDragClient = {\n            left: Math.floor(+props.elDrag.name.split('/')[1]),\n            right: Math.floor(+props.elDrag.name.split('/')[2]),\n            top: Math.floor(+props.elDrag.name.split('/')[3]),\n            bottom: Math.floor(+props.elDrag.name.split('/')[4])\n        }\n        if (props.elDragClient.left || Math.abs(Math.floor(props.elDragClient.right + 2)) - Math.floor(props.elDragContainer.clientWidth)) {\n            if (left > 0 && props.elDragClient.left) {\n                // need to optimize this\n                if (Math.abs(props.elDragClient.left) > Math.abs(left)) {\n                    matrix[4] = snapToGrid(transform[4] + Math.floor(left), snap.x);\n                } else {\n                    matrix[4] = snapToGrid(transform[4] + Math.abs(props.elDragClient.left), snap.x);\n                }\n            } else if (left <= 0 && Math.floor(props.elDragClient.right - 2) - Math.floor(props.elDragContainer.clientWidth)) {\n                if ((Math.abs(Math.floor(props.elDragClient.right)) - Math.floor(props.elDragContainer.clientWidth)) - Math.abs(left) > 0) {\n                    matrix[4] = snapToGrid(transform[4] + left, snap.x);\n                } else {\n                    matrix[4] = snapToGrid(transform[4] - (Math.abs(Math.floor(props.elDragClient.right)) - Math.floor(props.elDragContainer.clientWidth)), snap.x);\n                }\n            }\n        }\n        if (props.elDragClient.top) {\n            if (top > 0 && props.elDragClient.top) {\n                // need to optimize this\n                if (Math.abs(props.elDragClient.top) > Math.abs(top)) {\n                    matrix[5] = snapToGrid(transform[5] + Math.floor(top), snap.y);\n                } else {\n                    matrix[5] = snapToGrid(transform[5] + (Math.abs(props.elDragClient.top)), snap.y);\n                }\n            } else if (left <= 0 && Math.floor(props.elDragClient.bottom - 2) - Math.floor(props.elDragContainer.clientHeight)) {\n                if ((Math.abs(Math.floor(props.elDragClient.bottom)) - Math.floor(props.elDragContainer.clientHeight)) - Math.abs(top) > 0) {\n                    matrix[5] = snapToGrid(transform[5] + top, snap.y);\n                } else {\n                    matrix[5] = snapToGrid(transform[5] - (Math.abs(Math.floor(props.elDragClient.bottom)) - Math.floor(props.elDragContainer.clientHeight)), snap.y);\n                }\n            }\n        }\n\n    } else {\n        matrix[4] = snapToGrid(transform[4] + left, snap.x);\n        matrix[5] = snapToGrid(transform[5] + top, snap.y);\n    }\n    const css = matrixToCSS(matrix);\n\n    Helper(controls).css(css);\n    Helper(el).css(css);\n\n    storage.cached = matrix;\n}\n\nfunction processRotate(radians) {\n\n    const {\n        el,\n        storage\n    } = this;\n\n    const {\n        controls,\n        transform,\n        refang,\n        snap\n    } = storage;\n\n    const matrix = [...transform];\n\n    const angle = snapToGrid(refang + radians, snap.angle);\n    //rotate(Xdeg) = matrix(cos(X), sin(X), -sin(X), cos(X), 0, 0);\n    matrix[0] = floatToFixed(Math.cos(angle));\n    matrix[1] = floatToFixed(Math.sin(angle));\n    matrix[2] = - floatToFixed(Math.sin(angle));\n    matrix[3] = floatToFixed(Math.cos(angle));\n\n    window.parent.postMessage({ event: 'rotate-from-resizer', value: angle * (180 / Math.PI) }, 'http://127.0.0.1:3978/#/edit');\n    const css = matrixToCSS(matrix);\n\n    Helper(controls).css(css);\n    Helper(el).css(css);\n\n    storage.cached = matrix;\n}\n\nfunction matrixToCSS(arr) {\n    const style = `matrix(${arr.join()})`;\n\n    return {\n        transform: style,\n        webkitTranform: style,\n        mozTransform: style,\n        msTransform: style,\n        otransform: style\n    }\n}\n","import {\n    recalcPoint\n} from '../common'\n\nconst dRE = /([achlmqstvz])([^achlmqstvz]*)/gi;\nconst sepRE = /\\s*,\\s*|\\s+/g;\n\nfunction parsePath(path)  {\n\n    let match = dRE.lastIndex = 0;\n\n    const serialized = [];\n\n    while ((match = dRE.exec(path))) {\n\n        const cmd = match[1];\n        const upCmd = cmd.toUpperCase();\n\n        serialized.push({\n            relative: cmd !== upCmd,\n            key: upCmd,\n            cmd: cmd,\n            value: match[2].trim().split(sepRE).map(val => { \n                if (!isNaN(val)) {\n                    return Number(val);\n                }\n            })\n        });\n    }\n\n    return serialized;\n}\n\nexport function movePath(params) {\n\n    const { path, x, y } = params;\n\n    const serialized = parsePath(path);\n\n    let str = '';\n\n    let firstCommand = true;\n\n    for (let i = 0, len = serialized.length; i < len; i++) {\n\n        const item = serialized[i];\n\n        const { \n            value: values,\n            key: cmd,\n            relative\n        } = item;\n\n        switch (cmd) {\n            case 'M':\n                if (relative && !firstCommand) break;\n                values[0] = values[0] + x;\n                values[1] = values[1] + y;\n                break;\n            case 'A':\n                if (relative) break;\n                values[5] = values[5] + x;\n                values[6] = values[6] + y;\n                break;\n            case 'C':\n                if (relative) break;\n                values[0] = values[0] + x;\n                values[1] = values[1] + y;\n                values[2] = values[2] + x;\n                values[3] = values[3] + y;\n                values[4] = values[4] + x;\n                values[5] = values[5] + y;\n                break;\n            case 'H':\n                if (relative) break;\n                values[0] = values[0] + x;\n                break;\n            case 'V':\n                if (relative) break;\n                values[0] = values[0] + y;\n                break;\n            case 'L':\n            case 'T':\n                if (relative) break;\n                values[0] = values[0] + x;\n                values[1] = values[1] + y;\n                break;\n            \n            case 'Q':\n            case 'S':\n                if (relative) break;\n                values[0] = values[0] + x;\n                values[1] = values[1] + y;\n                values[2] = values[2] + x;\n                values[3] = values[3] + y;\n                break;\n            case 'Z':\n                values[0] = '';\n                break;\n        }\n\n        str += item.cmd + item.value.join(',') + ' ';\n        firstCommand = false;\n    }\n\n    return str;\n}\n\nexport function resizePath(params) {\n\n    const {\n        bBox,\n        path,\n        baseData,\n        dx,\n        dy,\n        revX,\n        revY,\n        fixedX,\n        fixedY\n    } = params;\n\n    const serialized = parsePath(path);\n\n    const { \n        width: boxW,\n        height: boxH\n    } = bBox;\n\n    let str = '';\n    const res = [];\n\n    let firstCommand = true;\n\n    for (let i = 0, len = serialized.length; i < len; i++) {\n\n        const item = serialized[i];\n\n        const { \n            value: values,\n            key: cmd,\n            relative\n        } = item;\n            \n        switch (cmd) {\n\n            case 'A': {\n\n                //A rx ry x-axis-rotation large-arc-flag sweep-flag x y\n                const [ rx, ry, x_axis_rot, large_arc_flag, sweep_flag, x, y ] = values;\n\n                const factorX = getFactor(revX),\n                    factorY = getFactor(revY);\n                \n                const params = [];\n\n                const newRx = rx + dx * factorX * (rx / boxW),\n                    newRy =  ry + dy * factorY * (ry / boxH);\n                \n                params.push(\n                    newRx,\n                    newRy,\n                    x_axis_rot,\n                    large_arc_flag,\n                    sweep_flag\n                );\n\n                if (relative) {\n\n                    params.push(\n                        setRelativeCoord(x, dx * factorX, boxW),\n                        setRelativeCoord(y, dy * factorY, boxH)\n                    );\n\n                } else {\n\n                    let valX = setCoord(x, dx, fixedX, boxW),\n                        valY = setCoord(y, dy, fixedY, boxH);\n\n                    const { resX, resY } = recalcPoint({\n                        x: valX,\n                        y: valY,\n                        ...baseData\n                    });\n\n                    params.push(\n                        resX,\n                        resY\n                    );\n                }\n\n                res.push(params);\n\n                break;\n            }\n\n            case 'C': {\n\n                //C x1 y1, x2 y2, x y (or c dx1 dy1, dx2 dy2, dx dy)\n                const [ x1, y1, x2, y2, x, y ] = values;\n\n                if (relative) {\n\n                    const factorX = getFactor(revX),\n                        factorY = getFactor(revY);\n\n                    res.push([\n                        setRelativeCoord(x1, dx * factorX, boxW),\n                        setRelativeCoord(y1, dy * factorY, boxH),\n                        setRelativeCoord(x2, dx * factorX, boxW),\n                        setRelativeCoord(y2, dy * factorY, boxH),\n                        setRelativeCoord(x, dx * factorX, boxW),\n                        setRelativeCoord(y, dy * factorY, boxH)\n                    ]);\n\n                } else {\n\n                    const factorX1 = revX && x1 > fixedX || !revX && x1 < fixedX ? -1 : 1,    \n                        factorY1 = revY && y1 > fixedY || !revY && y1 < fixedY ? -1 : 1,\n                        factorX2 = revX && x2 > fixedX || !revX && x2 < fixedX ? -1 : 1,    \n                        factorY2 = revY && y2 > fixedY || !revY && y2 < fixedY ? -1 : 1;\n\n                    const { resX: resX1, resY: resY1 } = recalcPoint({\n                        x: setCoord(x1, dx * factorX1, fixedX, boxW),\n                        y: setCoord(y1, dy * factorY1, fixedY, boxH),\n                        ...baseData\n                    });\n\n                    const { resX: resX2, resY: resY2 } = recalcPoint({\n                        x: setCoord(x2, dx * factorX2, fixedX, boxW),\n                        y: setCoord(y2, dy * factorY2, fixedY, boxH),\n                        ...baseData\n                    });\n\n                    const { resX: resX3, resY: resY3 } = recalcPoint({\n                        x: setCoord(x, dx, fixedX, boxW),\n                        y: setCoord(y, dy, fixedY, boxH),\n                        ...baseData\n                    });\n\n                    res.push([\n                        resX1,\n                        resY1,\n                        resX2,\n                        resY2,\n                        resX3,\n                        resY3\n                    ]);\n                }\n                break;\n            }\n\n            case 'H': {\n\n                if (relative) {\n                \n                    const factorX = getFactor(revX);\n                    res.push([\n                        setRelativeCoord(values[0], dx * factorX, boxW)\n                    ]);\n\n                } else {\n\n                    const { resX } = recalcPoint({\n                        x: setCoord(values[0], dx, fixedX, boxW),\n                        y: 0,\n                        ...baseData\n                    });\n\n                    res.push([resX]);\n                }\n                break;\n            }\n\n            case 'V': {\n\n                if (relative) {\n\n                    const factorY = getFactor(revY);\n\n                    res.push([\n                        setRelativeCoord(values[0], dy * factorY, boxH)\n                    ]);\n\n                } else {\n\n                    const { resY } = recalcPoint({\n                        x: 0,\n                        y: setCoord(values[0], dy, fixedY, boxH),\n                        ...baseData\n                    });\n\n                    res.push([resY]);\n                }\n                break;\n            }\n\n            case 'T':\n            case 'L': {\n\n                if (relative) {\n\n                    const factorX = getFactor(revX),\n                        factorY = getFactor(revY);\n\n                    res.push([\n                        setRelativeCoord(values[0], dx * factorX, boxW), \n                        setRelativeCoord(values[1], dy * factorY, boxH)\n                    ]);\n\n                } else {\n\n                    const { resX, resY } = recalcPoint({\n                        x: setCoord(values[0], dx, fixedX, boxW),\n                        y: setCoord(values[1], dy, fixedY, boxH),\n                        ...baseData\n                    });\n\n                    res.push([resX, resY]);\n                }\n                break;\n            }\n\n            case 'M': {\n\n                // M x y (or dx dy)\n                const [ x, y ] = values;\n\n                if (relative && !firstCommand) {\n\n                    const factorX = getFactor(revX),\n                        factorY = getFactor(revY);\n\n                    res.push([\n                        setRelativeCoord(x, dx * factorX, boxW), \n                        setRelativeCoord(y, dy * factorY, boxH)\n                    ]);\n\n                } else {\n\n                    const { resX, resY } = recalcPoint({\n                        x: setCoord(x, dx, fixedX, boxW),\n                        y: setCoord(y, dy, fixedY, boxH),\n                        ...baseData\n                    });\n\n                    res.push([resX, resY]);\n                }\n   \n                break;\n            }\n\n            case 'Q': {\n\n                //Q x1 y1, x y (or q dx1 dy1, dx dy)\n                const [x1, y1, x, y] = values;\n\n                if (relative) {\n\n                    const factorX = getFactor(revX),\n                        factorY = getFactor(revY);\n\n                    res.push([\n                        setRelativeCoord(x1, dx * factorX, boxW), \n                        setRelativeCoord(y1, dy * factorY, boxH), \n                        setRelativeCoord(x, dx * factorX, boxW), \n                        setRelativeCoord(y, dy * factorY, boxH)\n                    ]);\n\n                } else {\n\n                    const factorX = revX && x1 > fixedX || !revX && x1 < fixedX ? -1 : 1,    \n                        factorY = revY && y1 > fixedY || !revY && y1 < fixedY ? -1 : 1;\n\n                    const { resX: resX1, resY: resY1 } = recalcPoint({\n                        x: setCoord(x1, dx * factorX, fixedX, boxW),\n                        y: setCoord(y1, dy * factorY, fixedY, boxH),\n                        ...baseData\n                    });\n\n                    const { resX: resX2, resY: resY2 } = recalcPoint({\n                        x: setCoord(x, dx, fixedX, boxW),\n                        y: setCoord(y, dy, fixedY, boxH),\n                        ...baseData\n                    });\n\n                    res.push([resX1, resY1, resX2, resY2]);\n                }\n                \n                break;\n            }\n\n            case 'S': {\n\n                //S x2 y2, x y (or s dx2 dy2, dx dy)\n                const [ x2, y2, x, y ] = values;\n\n                if (relative) {\n\n                    const factorX = getFactor(revX),    \n                        factorY = getFactor(revY);\n\n                    res.push([\n                        setRelativeCoord(x2, dx * factorX, boxW),\n                        setRelativeCoord(y2, dy * factorY, boxH),\n                        setRelativeCoord(x, dx * factorX, boxW),\n                        setRelativeCoord(y, dy * factorY, boxH)\n                    ]);\n                } else {\n\n                    const factorX = revX && x2 > fixedX || !revX && x2 < fixedX ? -1 : 1,    \n                        factorY = revY && y2 > fixedY || !revY && y2 < fixedY ? -1 : 1;\n\n                    const { resX : resX1, resY: resY1 } = recalcPoint({\n                        x: setCoord(x2, dx * factorX, fixedX, boxW),\n                        y: setCoord(y2, dy * factorY, fixedY, boxH),\n                        ...baseData\n                    });\n\n                    const { resX : resX2, resY: resY2 } = recalcPoint({\n                        x: setCoord(x, dx, fixedX, boxW),\n                        y: setCoord(y, dy, fixedY, boxH),\n                        ...baseData\n                    });\n\n                    res.push([\n                        resX1,\n                        resY1,\n                        resX2,\n                        resY2\n                    ]);\n                }\n                break;\n            }\n\n            case 'Z': {\n                res.push(['']);\n                break;\n            }\n        }\n\n        str += item.cmd + res[i].join(',') + ' ';\n\n        firstCommand = false;\n    }\n\n    return str;\n}\n\nexport function setCoord(value, diff, fixed, dist) {\n    return value + diff * (Math.abs(value - fixed) / dist);\n}\n\nfunction setRelativeCoord(value, diff, dist) {\n    return value + diff * (value / dist);\n}\n\nexport function getFactor(b) {\n    return b === true ? -1 : 1;\n}","import { Helper } from '../../helper'\nimport Subject from '../subject'\n\nimport { \n    parseTransform,\n    getOffset\n} from '../../util/css-util'\n\nimport {\n    DEG,\n    snapToGrid,\n    snapCandidate,\n    rotatedTopLeft,\n    recalcPoint\n} from '../common'\n\nimport {\n    movePath,\n    resizePath,\n    setCoord,\n    getFactor\n} from './path'\nimport { isUndef } from '../../util/util';\n\nconst MIN_SIZE = 2; \nconst ROT_OFFSET = 25;\nconst floatRE = /[+-]?\\d+(\\.\\d+)?/g; \nconst translateRE = /translate\\(.*\\)(.*)translate\\(.*\\)|$/;\n\nexport default class DraggableSVG extends Subject {\n\n    constructor(el, options, Observable) {\n        super(el, Observable);\n        this.enable(options);\n    }\n\n    _init(item, options) {\n        _init.call(this, item, options);\n    }\n\n    _destroy(item) {\n        _destroy.call(this, item);\n    }\n\n    _drag() {\n        processMove.call(this, ...arguments);\n    }\n\n    _rotate() {\n        processRotate.call(this, ...arguments);\n    }\n\n    _resize() {\n        processResize.call(this, ...arguments);\n    }\n\n    _compute() {\n        return _compute.call(this, ...arguments);\n    }\n\n    _apply(actionName) {\n\n        const {\n            box, \n            handles,\n            refang,\n            factor,\n            wrapper,\n            cached,\n            transform\n        } = this.storage;\n\n        const translate = parseTransform(wrapper.getAttribute('transform') || 'translate(0 0)').translate;\n\n        const { x, y, width: newWidth, height: newHeight } = box.getBBox();\n\n        const dx = translate[0],\n            dy = translate[1],\n            resultX = x + dx,\n            resultY = y + dy;\n\n        const centerX = resultX + newWidth / 2,\n            centerY = resultY + newHeight / 2;\n\n        if (actionName !== 'rotate') {\n\n            applyTransformToHandles(box, handles, {\n                x: resultX,\n                y: resultY,\n                width: newWidth,\n                height: newHeight,\n                angle: refang * factor\n            });\n        }\n\n        if (actionName === 'drag') {\n\n            if (dx === 0 && dy === 0) return;\n                \n            wrapper.removeAttribute('transform');\n\n            const els = [];\n\n            if (this.el.tagName.toLowerCase() === 'g') {\n\n                this.el.childNodes.forEach(item => {\n                    if (item.nodeType === 1) {\n                        els.push(item);\n                    }\n                });\n\n                this.el.removeAttribute('transform');\n            } else {\n                els.push(this.el);\n            }\n\n            els.forEach((element) => {\n                applyTranslate(element, {\n                    x: dx,\n                    y: dy,\n                    angle: refang * factor * DEG,\n                    centerX,\n                    centerY\n                });\n            })\n        }\n\n        if (actionName === 'resize') {\n\n            if (isUndef(cached)) return;\n\n            const els = [];\n\n            const {\n                revX, \n                revY,\n                scaleX,\n                scaleY,\n                diffX,\n                diffY\n            } = cached;\n                \n            let isGroup = false;\n\n            if (this.el.tagName.toLowerCase() === 'g') {\n                this.el.childNodes.forEach(item => {\n                    if (item.nodeType === 1) {\n                        els.push(item);\n                    }\n                });\n                isGroup = true;\n            } else {\n                els.push(this.el);\n            }\n\n            els.forEach((element) => {\n\n                applyResize(element, {\n                    scaleX,\n                    scaleY,\n                    diffX: diffX * getFactor(revX),\n                    diffY: diffY * getFactor(revY),\n                    revX,\n                    revY,\n                    angle: refang * factor,\n                    factor,\n                    centerX,\n                    centerY,    \n                    bBox: isGroup === true \n                            ? transform.bBox \n                            : element.getBBox(),\n                    store: this.storage\n                });\n            });\n\n            this.storage.cached = null;\n        }\n    }\n\n    onRefreshState(data) {\n\n        const store = this.storage;\n\n        const recalc = refreshState.call(\n            this,\n            data\n        );\n\n        Object.keys(data).forEach(key => {\n            store[key] = data[key];\n        });\n\n        Object.keys(recalc).forEach(key => {\n            store[key] = recalc[key];\n        });\n    }\n}\n\nfunction _init(sel) {\n\n    const wrapper = createSVG('g');\n    sel.parentNode.appendChild(wrapper);\n\n    const {\n        width: w, \n        height: h, \n        x, \n        y\n    } = sel.getBBox();\n\n    const transform = sel.getAttribute('transform') || 'translate(0 0)';\n\n    const box = createSVG('rect');\n\n    const attrs = [\n        ['width', w],\n        ['height', h],\n        ['x', x],\n        ['y', y],\n        ['fill', 'transparent'],\n        ['stroke', '#00a8ff'],\n        ['stroke-dasharray', '3 3'],\n        ['transform', transform]\n    ];\n\n    attrs.forEach(item => {\n        box.setAttribute(item[0], item[1]);\n    });\n\n    let group = createSVG('g');\n        group.appendChild(box);\n\n    wrapper.appendChild(group);\n\n    const handles = {\n        tl: [x, y],\n        tr: [x + w, y],\n        br: [x + w, y + h],\n        bl: [x, y + h],\n        tc: [x + w / 2, y],\n        bc: [x + w / 2, y + h],\n        ml: [x, y + h / 2],\n        mr: [x + w, y + h / 2],\n        rotator: [x + w / 2, y - ROT_OFFSET]\n    };\n\n    Object.keys(handles).forEach(key => {\n        const data = handles[key];\n        handles[key] = createHandler(data[0], data[1], transform);\n        wrapper.appendChild(\n            createSVG('g').appendChild(handles[key]).parentNode\n        );\n    });\n\n    Object.assign(this.storage, {\n        wrapper,\n        box,\n        handles,\n        parent: wrapper.parentNode\n    });\n\n    Helper(wrapper).on('mousedown', this._onMouseDown)\n                    .on('touchstart', this._onTouchStart);\n}\n\nfunction _compute(e) {\n\n    const {\n        box,\n        handles,\n        snap,\n        parent\n    } = this.storage;\n\n    const handle = Helper(e.target);\n\n    let factor = 1;\n\n    //reverse axis\n    const revX = handle.is(handles.tl) ||\n                handle.is(handles.ml) ||\n                handle.is(handles.bl) ||\n                handle.is(handles.tc);\n\n    const revY = handle.is(handles.tl) || \n                handle.is(handles.tr) || \n                handle.is(handles.tc) || \n                handle.is(handles.ml);\n\n    //reverse angle\n    if (handle.is(handles.tr) || \n        handle.is(handles.bl)\n    ) { \n        factor = -1;\n    }\n\n    const tl_off = getOffset(handles.tl),\n        tr_off = getOffset(handles.tr);\n        \n    const refang = Math.atan2(\n        tr_off.top - tl_off.top, \n        tr_off.left - tl_off.left\n    ) * factor;\n\n    const bBox = box.getBBox();\n\n    const { width: cw, height: ch, x: c_left, y: c_top } = bBox;\n                                                                                                \n    const coords = rotatedTopLeft(\n        c_left,\n        c_top,\n        cw,\n        ch,\n        refang,\n        revX,\n        revY\n    );\n\n    const boxOffset = getOffset(box);\n\n    const center_x = boxOffset.left + cw / 2,\n        center_y = boxOffset.top + ch / 2;\n\n    const pressang = Math.atan2(\n        e.pageY - center_y,\n        e.pageX - center_x\n    );\n\n    const onTopEdge = handle.is(handles.tl) || handle.is(handles.tc) || handle.is(handles.tr),\n        onLeftEdge = handle.is(handles.tl) || handle.is(handles.ml) || handle.is(handles.bl),\n        onRightEdge = handle.is(handles.tr) || handle.is(handles.mr) || handle.is(handles.br),\n        onBottomEdge = handle.is(handles.br) || handle.is(handles.bc) || handle.is(handles.bl);\n\n    const transform = {\n        orig: this.el.getAttribute('transform'),\n        value: box.getAttribute('transform'),\n        scaleX: revX ? cw + c_left : c_left,\n        scaleY: revY ? ch + c_top : c_top,\n        bBox\n    };\n\n    return {\n        transform,\n        parentScale: parseTransform(parent.getAttribute('transform') || 'scale(1 1)').scale,\n        cw,\n        ch,\n        center: {\n            x: boxOffset.left + cw / 2,\n            y: boxOffset.top + ch / 2,\n            left: c_left + cw / 2,\n            top: c_top + ch / 2\n        },\n        left: snapCandidate(c_left, snap.x),\n        top: snapCandidate(c_top, snap.y),\n        coordX: coords.left,\n        coordY: coords.top,\n        factor,\n        pressang,\n        refang,\n        revX,\n        revY,\n        handle,\n        onTopEdge,\n        onLeftEdge,\n        onRightEdge,\n        onBottomEdge\n    }\n}\n\nfunction _destroy() {\n\n    const { wrapper } = this.storage;\n\n    Helper(wrapper).off('mousedown', this._onMouseDown)\n                    .off('touchstart', this._onTouchStart);\n\n    this.el.parentNode.removeChild(wrapper);\n}\n\nfunction refreshState(params) {\n\n    const { \n        factor, \n        revX, \n        revY,\n    } = params;\n\n    const { \n        box,\n        handles,\n        snap\n    } = this.storage;\n\n    const tl_off = getOffset(handles.tl),\n        tr_off = getOffset(handles.tr);\n\n    let refang = Math.atan2(\n        tr_off.y - tl_off.y, \n        tr_off.x - tl_off.x\n    ) * factor;\n\n    const bBox = box.getBBox();\n\n    const { width: cw, height: ch, x: c_left, y: c_top } = bBox;\n                                                                                                 \n    const coords = rotatedTopLeft(\n        c_left,\n        c_top,\n        cw,\n        ch,\n        refang,\n        revX,\n        revY\n    );\n\n    const boxOffset = getOffset(box);\n\n    const transform = {\n        orig: this.el.getAttribute('transform'),\n        value: box.getAttribute('transform'),\n        scaleX: revX ? cw + c_left : c_left,\n        scaleY: revY ? ch + c_top : c_top,\n        bBox\n    };\n\n    return {\n        transform,\n        cw,\n        ch,\n        center: {\n            x: boxOffset.left + cw / 2,\n            y: boxOffset.top + ch / 2,\n            left: c_left + cw / 2,\n            top: c_top + ch / 2\n        },\n        left: snapCandidate(c_left, snap.x),\n        top: snapCandidate(c_top, snap.y),\n        coordX: coords.left,\n        coordY: coords.top,\n        factor,\n        refang\n    }\n}\n\nfunction processResize(\n    width,\n    height,\n    revX, \n    revY\n) {\n\n    const {\n        box,\n        handles,\n        snap,\n        left,\n        top,\n        coordX,\n        coordY,\n        refang,\n        factor,\n        cw,\n        ch,\n        transform\n    } = this.storage;\n    const sel = this.el;\n        \n    let newWidth = Number(box.getAttribute('width')),\n        newHeight = Number(box.getAttribute('height'));\n\n    if (width !== null) {\n        newWidth = snapToGrid(width, snap.x);\n    }\n\n    if (height !== null) {\n        newHeight = snapToGrid(height, snap.y);\n    }\n\n    if (Math.abs(newWidth) < MIN_SIZE || Math.abs(newHeight) < MIN_SIZE) return;\n\n    const coords = rotatedTopLeft(\n        left,\n        top,\n        newWidth,\n        newHeight,\n        refang,\n        revX,\n        revY\n    );\n\n    const resultY = top - (coords.top - coordY),\n        resultX = left - (coords.left - coordX);\n\n    applyTransformToHandles(box, handles, {\n        x: resultX,\n        y: resultY,\n        width: newWidth,\n        height: newHeight,\n        angle: refang * factor\n    });\n\n    const scaleX = newWidth / cw,\n        scaleY = newHeight / ch;\n\n    this.storage.cached = {\n        scaleX: scaleX,\n        scaleY: scaleY,\n        diffX: newWidth - cw,\n        diffY: newHeight - ch,\n        revX: revX,\n        revY: revY\n    };\n\n    const { scaleX: ptX, scaleY: ptY } = transform;\n\n    const scaleString = `translate(${ptX} ${ptY}) scale(${scaleX} ${scaleY}) translate(${-ptX} ${-ptY})`;\n\n    if (sel.tagName.toLowerCase() === 'g') {\n        sel.childNodes.forEach(element => {\n\n            if (element.nodeType !== 1) return;\n\n            const oldTransform = element.getAttribute('transform') || '';\n            element.setAttribute(\n                'transform', \n                oldTransform.replace(translateRE, scaleString)\n            );\n        });\n    } else {\n        const oldTransform = sel.getAttribute('transform') || '';\n        sel.setAttribute(\n            'transform', \n            oldTransform.replace(translateRE, scaleString)\n        );\n    }\n}\n\nfunction processMove(\n    top,\n    left\n) {\n    let {\n        snap,\n        transform,\n        wrapper\n    } = this.storage;\n\n    const originTransform = transform.orig || '';\n    \n    const x = snapToGrid(left, snap.x),\n        y = snapToGrid(top, snap.y);\n\n    const transformString = `translate(${x} ${y})`;\n    const newTransform = originTransform.replace(/translate\\(.+\\)|^/, transformString);\n\n    wrapper.setAttribute('transform', transformString);\n    this.el.setAttribute('transform', newTransform);\n}\n\nfunction processRotate(radians) {\n\n    const {\n        refang,\n        snap,\n        center,\n        box,\n        handles\n    } = this.storage;\n\n    const angle = snapToGrid(refang + radians, snap.angle);\n\n    const transform = `rotate(${angle * DEG} ${center.left} ${center.top})`;\n\n    box.setAttribute('transform', transform);\n\n    Object.keys(handles).forEach(hdl => {\n        handles[hdl].setAttribute('transform', transform);\n    });\n\n    if (this.el.tagName.toLowerCase() === 'g') {\n        this.el.childNodes.forEach((element) => {\n            if (element.nodeType !== 1) return;\n            element.setAttribute('transform', transform);\n        });\n    } else {\n        this.el.setAttribute('transform', transform);\n    }\n}\n\nfunction createSVG(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\n\nfunction createHandler(l, t, transform) {\n\n    const handler = createSVG('circle');\n    \n    const items = {\n        cx: l,\n        cy: t,\n        r: 6,\n        fill: 'white',\n        stroke: '#00a8ff',\n        transform: transform\n    };\n\n    Object.keys(items).map(key => {\n        handler.setAttribute(key, items[key]);\n    });\n\n    return handler;\n}\n\nfunction applyTranslate(element, data) {\n\n    const {\n        x,\n        y,\n        angle,\n        centerX,\n        centerY\n    } = data;\n\n    const attrs = [\n        ['transform', `rotate(${angle} ${centerX} ${centerY})`]\n    ];\n\n    switch(element.tagName.toLowerCase()) {\n\n        case 'text':\n        case 'rect': {\n\n                let resX = Number(element.getAttribute('x')) + x,\n                    resY = Number(element.getAttribute('y')) + y;\n\n                attrs.push(\n                    ['x', resX],\n                    ['y', resY]\n                );\n            }\n            break;\n\n        case 'circle':\n        case 'ellipse': {\n\n                let resX = Number(element.getAttribute('cx')) + x,\n                    resY = Number(element.getAttribute('cy')) + y;\n\n                attrs.push(\n                    ['cx', resX],\n                    ['cy', resY]\n                );\n            }\n            break;\n        \n        case 'line': {\n\n                let resX1 = Number(element.getAttribute('x1')) + x,\n                    resY1 = Number(element.getAttribute('y1')) + y,\n                    resX2 = Number(element.getAttribute('x2')) + x,\n                    resY2 = Number(element.getAttribute('y2')) + y;\n\n                attrs.push(\n                    ['x1', resX1],\n                    ['y1', resY1],\n                    ['x2', resX2],\n                    ['y2', resY2]\n                );\n            }\n            break;\n\n        case 'polygon':\n        case 'polyline': {\n\n                const points = parsePoints(element.getAttribute('points'));\n                const result = points.map(item => { \n\n                    item[0] = Number(item[0]) + x;\n                    item[1] = Number(item[1]) + y;\n\n                    return item.join(' ');\n                }).join(' '); \n\n                attrs.push(\n                    ['points', result]\n                );\n            }\n            break;\n        \n        case 'path': {\n\n                const path = element.getAttribute('d');\n\n                attrs.push(['d', movePath(\n                    {\n                        path, \n                        x, \n                        y\n                    }\n                )]);\n            }\n            break;\n\n        default:\n            break;\n    }\n\n    attrs.forEach(item => {\n        element.setAttribute(item[0], item[1]);\n    });\n}\n\nfunction applyResize(element, data) {\n\n    const {\n        scaleX,\n        scaleY,\n        diffX,\n        diffY,\n        revX,\n        revY,\n        angle,\n        centerX,\n        centerY,\n        bBox,\n        store\n    } = data;\n\n    const {\n        onRightEdge,\n        onLeftEdge,\n        onTopEdge,\n        onBottomEdge,\n        center\n    } = store;\n\n    const { \n        x: boxX, \n        y: boxY, \n        width: boxW, \n        height: boxH\n    } = bBox;\n\n    let fixedX = 0, \n        fixedY = 0;\n    \n    if (onRightEdge) {\n        fixedX = boxX;\n    } \n    if (onLeftEdge) {\n        fixedX = boxX + boxW;\n    } \n    if (onTopEdge) {\n        fixedY = boxY + boxH;\n    } \n    if (onBottomEdge) {\n        fixedY = boxY;\n    }\n\n    const baseData = {\n        centerX: center.left,\n        centerY: center.top,\n        newCenterX: centerX,\n        newCenterY: centerY,\n        angle: angle\n    };\n\n    const attrs = [\n        ['transform', `rotate(${angle * DEG} ${centerX} ${centerY})`]\n    ];\n\n    switch(element.tagName.toLowerCase()) {\n\n        case 'text': {\n\n            const x = Number(element.getAttribute('x')),\n                y = Number(element.getAttribute('y'));\n\n            const { resX, resY } = recalcPoint({\n                x: setCoord(x, diffX, fixedX, boxW),\n                y: setCoord(y, diffY, fixedY, boxH),\n                ...baseData\n            });\n\n            attrs.push(\n                ['x', resX + (scaleX < 0 ? boxW : 0)],\n                ['y', resY + (scaleY < 0 ? boxH : 0)]\n            );\n        }\n        break;\n\n        case 'circle': {\n\n                const r = Number(element.getAttribute('r')),\n                    cx = Number(element.getAttribute('cx')),\n                    cy = Number(element.getAttribute('cy')),\n                    newR = r * (Math.abs(scaleX) + Math.abs(scaleY)) / 2;\n\n                const { resX, resY } = recalcPoint({\n                    x: setCoord(cx, diffX, fixedX, boxW),\n                    y: setCoord(cy, diffY, fixedY, boxH),\n                    ...baseData\n                });\n\n                attrs.push(\n                    ['r', newR],\n                    ['cx', resX],\n                    ['cy', resY]\n                );\n            }\n            break;\n\n        case 'rect': {\n\n                const width = Number(element.getAttribute('width')),\n                    height = Number(element.getAttribute('height')),\n                    x = Number(element.getAttribute('x')),\n                    y = Number(element.getAttribute('y'));\n\n                const { resX, resY } = recalcPoint({\n                    x: setCoord(x, diffX, fixedX, boxW),\n                    y: setCoord(y, diffY, fixedY, boxH),\n                    ...baseData\n                });\n\n                const newWidth = width * Math.abs(scaleX),\n                    newHeight = height * Math.abs(scaleY);\n\n                attrs.push(\n                    ['x', resX - (scaleX < 0 ? newWidth : 0)],\n                    ['y', resY - (scaleY < 0 ? newHeight : 0)],\n                    ['width', newWidth],\n                    ['height', newHeight]\n                );\n            }\n            break;\n    \n        case 'ellipse': {\n\n                const rx = Number(element.getAttribute('rx')),\n                    ry = Number(element.getAttribute('ry')),\n                    cx = Number(element.getAttribute('cx')),\n                    cy = Number(element.getAttribute('cy'));\n\n                const { resX, resY } = recalcPoint({\n                    x: setCoord(cx, diffX, fixedX, boxW),\n                    y: setCoord(cy, diffY, fixedY, boxH),\n                    ...baseData\n                });\n\n                attrs.push(\n                    ['rx', rx * Math.abs(scaleX)],\n                    ['ry', ry * Math.abs(scaleY)],\n                    ['cx', resX],\n                    ['cy', resY]\n                );\n            }\n            break;\n        \n        case 'line': {\n\n                const resX1 = Number(element.getAttribute('x1')),\n                    resY1 = Number(element.getAttribute('y1')),\n                    resX2 = Number(element.getAttribute('x2')),\n                    resY2 = Number(element.getAttribute('y2'));\n\n                const { resX : resX1_, resY: resY1_  } = recalcPoint({\n                    x: setCoord(resX1, diffX, fixedX, boxW),\n                    y: setCoord(resY1, diffY, fixedY, boxH),\n                    ...baseData\n                });\n\n                const { resX : resX2_, resY: resY2_  } = recalcPoint({\n                    x: setCoord(resX2, diffX, fixedX, boxW),\n                    y: setCoord(resY2, diffY, fixedY, boxH),\n                    ...baseData\n                });\n\n                attrs.push(\n                    ['x1', resX1_],\n                    ['y1', resY1_],\n                    ['x2', resX2_],\n                    ['y2', resY2_]\n                );\n            }\n            break;\n\n        case 'polygon':\n        case 'polyline': {\n\n                const points = parsePoints(element.getAttribute('points'));\n                const result = points.map(item => {\n\n                    const { resX, resY } = recalcPoint({\n                        x: setCoord(Number(item[0]), diffX, fixedX, boxW),\n                        y: setCoord(Number(item[1]), diffY, fixedY, boxH),\n                        ...baseData\n                    });\n\n                    item[0] = resX;\n                    item[1] = resY;\n\n                    return item.join(' ');\n\n                }).join(' ');\n\n                attrs.push(['points', result]);\n            }\n            break;\n        \n        case 'path': {\n\n                const path = element.getAttribute('d');\n\n                attrs.push(['d', resizePath(\n                    {\n                        bBox,\n                        path,\n                        baseData,\n                        dx: diffX, \n                        dy: diffY,\n                        revX,\n                        revY,\n                        fixedX,\n                        fixedY\n                    }\n                )]);\n            }\n            break;\n\n        default: {}\n            break;\n    }\n\n    attrs.forEach(attr => {\n        element.setAttribute(attr[0], attr[1]);\n    });\n}\n\nfunction applyTransformToHandles(box, handles, data) {\n\n    let { x, y, width, height, angle } = data;\n\n    const halfWidth = width / 2,\n        halfHeight = height / 2;\n\n    const newTransform = `rotate(${angle * DEG} ${x + halfWidth} ${y + halfHeight})`;\n\n    const attrs = {\n        tl: [x, y],\n        ml: [x, y + halfHeight],\n        bl: [x, y + height],\n        tc: [x + halfWidth, y],\n        tr: [x + width, y],\n        mr: [x + width, y + halfHeight],\n        br: [x + width, y + height],\n        bc: [x + halfWidth, y + height],\n        rotator: [x + halfWidth, y - ROT_OFFSET + (height < 0 ? height : 0)]\n    };\n\n    x = x + (width < 0 ? width : 0);\n    y = y + (height < 0 ? height : 0);\n\n    const boxAttrs = {\n        x: x,\n        y: y,\n        width: Math.abs(width),\n        height: Math.abs(height),\n        transform: newTransform\n    };\n\n    Object.keys(boxAttrs).forEach(attr => {\n        box.setAttribute(attr, boxAttrs[attr]);\n    });\n\n    Object.keys(handles).forEach(key => {\n        const hdl = handles[key];\n        hdl.setAttribute('cx', attrs[key][0]);\n        hdl.setAttribute('cy', attrs[key][1]);\n        hdl.setAttribute('transform', newTransform);\n    });\n}\n\nfunction parsePoints(pts) {\n    return pts.match(floatRE).reduce((result, value, index, array) => {\n        if (index % 2 === 0) {\n            result.push(array.slice(index, index + 2));\n        } \n        return result; \n    }, []);\n}\n","/* @license\n * Move/Rotate/Resize tool\n * Released under the MIT license, 2018-2019\n * nichollascarter@gmail.com\n*/\n\nimport '../style/subjx.css'\nimport _drag from './core/transform/index'\nimport { Helper_ } from './core/helper'\n\nclass Subjx extends Helper_ {\n\n    constructor(params) {\n        super(params);\n    }\n\n    drag(method) {\n        return _drag.call(this, method);\n    }\n}\n\nexport default function(params) {\n    return new Subjx(params);\n}","import Observable from '../observer/Observer'\nimport Draggable from './html'\nimport DraggableSVG from './svg/index'\n\nimport {\n    arrMap\n} from '../util/util'\n\n// factory method for creating draggable elements\nexport default function _drag(options) {\n    if (this.length) {\n        const Ob = new Observable();\n        return arrMap.call(this, item => {\n            if (!(item instanceof SVGElement)) {\n                return new Draggable(item, options, Ob);\n            } else {\n                return new DraggableSVG(item, options, Ob);\n            }   \n        })\n    }\n}"],"sourceRoot":""}