<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width,minimum-scale=1,initial-scale=1">
  <script async custom-element="amp-video" src=<%=ampVideoPath%>></script>
  <script async src=<%=v0Path%>></script>
  <script async custom-element="amp-story" src=<%=ampStoryPath%>></script>
  <% if (ampAnimationPath !== null) { %>
  <script async custom-element="amp-animation" src=<%=ampAnimationPath%>></script>
  <% } %>
  <title><%= ampStory.title%></title>
  <link rel="canonical" href="https://test-cutnut-tv.cdn.ampproject.org/c/s/test.cutnut.tv/amp/<%=ampStory.key%>" />
  <% include ./fonts/googleFonts.ejs %>
  <style amp-boilerplate>
    body {
      -webkit-animation: -amp-start 8s steps(1, end) 0s 1 normal both;
      -moz-animation: -amp-start 8s steps(1, end) 0s 1 normal both;
      -ms-animation: -amp-start 8s steps(1, end) 0s 1 normal both;
      animation: -amp-start 8s steps(1, end) 0s 1 normal both
    }

    @-webkit-keyframes -amp-start {
      from {
        visibility: hidden
      }

      to {
        visibility: visible
      }
    }

    @-moz-keyframes -amp-start {
      from {
        visibility: hidden
      }

      to {
        visibility: visible
      }
    }

    @-ms-keyframes -amp-start {
      from {
        visibility: hidden
      }

      to {
        visibility: visible
      }
    }

    @-o-keyframes -amp-start {
      from {
        visibility: hidden
      }

      to {
        visibility: visible
      }
    }

    @keyframes -amp-start {
      from {
        visibility: hidden
      }

      to {
        visibility: visible
      }
    }
  </style><noscript>
    <style amp-boilerplate>
      body {
        -webkit-animation: none;
        -moz-animation: none;
        -ms-animation: none;
        animation: none
      }
    </style>
  </noscript>
  <style amp-custom>
    <% include ./fonts/custom.ejs %>
    <% if (ampStory.fromPreview || !v0Path.includes('https')) { %>
    .resizable .resizers .resizer {
      width: 10px;
      height: 10px;
      border-radius: 50%;
      background: white;
      border: 3px solid #4286f4;
      position: absolute;
      z-index: 1;
    }
    .resizable .resizers .resizer.top-left {
      left: -5px;
      top: -5px;
      cursor: nwse-resize;
    }
    .i-amphtml-story-bookend {
      display: none !important;
    }

    .i-amphtml-story-spinner-container::after {
      display: none !important;
    }

    .resizable .resizers .resizer.top-right {
      right: -5px;
      top: -5px;
      cursor: nesw-resize;
    }

    .resizable .resizers .resizer.bottom-left {
      left: -5px;
      bottom: -5px;
      cursor: nesw-resize;
    }

    .resizable .resizers .resizer.bottom-right {
      right: -5px;
      bottom: -5px;
      cursor: nwse-resize;
    }

    .rotate {
      background-color: #23241f;
      width: 1px;
      height: 50px;
      position: absolute;
      display: none;
      left: 50%;
      top: -50px;
    }

    .rotate:before {
      content: '';
      width: 8px;
      height: 8px;
      position: absolute;
      display: flex;
      left: -4px;
      top: -9px;
      border-radius: 4px;
      border: 1px solid black;
      cursor: alias;
    }

    <%}%>
    amp-story.single-slide>div {
      display: none;
    }

    .disable-overlay {
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      z-index: 100;
    }

    amp-story-grid-layer:not(#full-screen) {
      padding: 0;
    }

    .container:not(#full-screen) {
      background-color: #eeeeee;
    }

    .grid {
      height: 100%;
      width: 100%;
      top: 0;
      right: 0;
      left: 0;
      bottom: 0;
      position: absolute;
    }

    #story img,
    #story video {
      object-fit: fill;
    }

    #story .full-screan-image img {
      object-fit: cover;
    }


    .item {
      height: 100%;
      align-self: center;
      z-index: 1;
      position: relative;
    }

    .item.text {
      position: relative;
      align-self: center;
      justify-self: stretch;
      /*height: 150px;*/
    }

    .item.text .inner-item {
      align-self: center;
      position: absolute;
    }

    .text-container p {
      white-space: nowrap;
    }

    .text-content {
      position: absolute;
      left: 50%;
      transform: translateX(-50%);
    }

    .single-text {
      width: 100%;
    }

    .flex-container {
      display: flex;
      position: relative;
    }

    .flex-container-full {
      display: flex;
      position: initial;
    }

    .image {
      align-self: center;
      justify-self: center;
    }

    .image-full {
      overflow: hidden;
      align-self: center;
      justify-self: center;
      position: absolute;
      width: 100%;
      height: 100%;
    }

    .amp-img-full {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }

    img {
      width: 100%;
      height: 100%;
      pointer-events: none;
      -moz-user-select: none;
      -webkit-user-select: none;
      user-select: none;
    }

    amp-img {
      pointer-events: none;
      -moz-user-select: none;
      -webkit-user-select: none;
      user-select: none;
    }

    .rotate-wrapper {
      position: absolute;
      width: 100%;
      height: 100%;
    }

    .drag-item {
      position: absolute;
      top: 50%;
      left: 35%;
    }
    amp-img.small-image img {
      object-fit: fill;
    }
    video {
      object-fit: fill;
    }
    .small-image img {
      width: 100%;
      height: 100%;
      object-fit: fill;
    }

    #full-screen {
      position: absolute;
      width: 100%;
      height: 100%;
    }

    #full-screen video {
      object-fit: cover;
    }

    .full-screan-image {
      width: 100%;
      height: 100%;
    }

    .full-screan-image img {
      object-fit: cover;
    }

    .single-text div {
      font-family: Montserrat;
      font-weight: 500;
      white-space: nowrap;
      text-rendering: auto;
      line-height: 1;
    }

    .single-text * {
      text-decoration: inherit;
      white-space: pre-wrap;
      word-break: break-word;
      background-color: inherit;
    }

    .layer-border {
      box-shadow: 0 0 2px 2px white;
      outline: 1px solid black;
    }
    @media screen and (max-width: 1023px) {
      .single-text {
        font-size: 2.6vw;
      }

      .animate {
        font-size: 3.434vw;
      }

      .rotate-wrapper {
        font-size: 3.434vw;
      }
    }

    @media (max-width: 1023px) {
      @media screen and (min-aspect-ratio: 9/12) {
        .single-text {
          font-size: 1.46vh;
        }

        .animate {
          font-size: 1.94vh;
        }

        amp-story-grid-layer {
          height: 100vh;
          margin: auto;
          width: 56.25vh;
        }

        .rotate-wrapper {
          font-size: 2vh;
        }
      }

      @media screen and (max-aspect-ratio: 9/20) {
        .single-text {
          font-size: 2.62vw;
        }

        div.animate {
          font-size: 3.48vw;
        }

        amp-story-grid-layer {
          height: 177.69vw;
          margin: auto;
          width: 100vw;
        }
      }
    }

    @media screen and (min-width: 1024px) {
      .single-text {
        font-size: 1.55vh;
      }

      div.animate {
        font-size: 2vh;
      }
    }
  </style>
  <% if (ampStory.fromPreview || !v0Path.includes('https')) { %>
    <link rel="stylesheet" href="/resize-files?path=amp-to-html/dist/style/subjx.css" />
  <% } %>
  <% include ./main.ejs %>
  <script>
		function callWithDelay ({ delay, callback, args = {} }) {
			return new Promise(resolve => {
				const timeout = setTimeout(() => {
					if (callback) {
						callback({ ...args })
					}
					return resolve(clearTimeout(timeout));
				}, delay)
			})
		}
		function emitClick ({posX, posY}) {
			x = posX || window.innerWidth - 20;
			y = posY || window.innerHeight - 100;
			const ev = document.createEvent("MouseEvent");
			const el = document.elementFromPoint(x,y);
			ev.initMouseEvent(
				"click",
				true, true,
				window, null,
				x, y, x, y,
				false, false, false, false,
				0, null
			);
			el.dispatchEvent(ev);
			console.log(posX ? 'back' : 'forward');
		}
		async function clickSlide() {
			const delay = 1000;
			await callWithDelay({ delay, callback: emitClick });
			await callWithDelay({ delay, callback: emitClick, args: { posX: 1, posY: 1 }});
			await callWithDelay({ delay, callback: emitClick });
			console.log('finish');
		}
  </script>
</head>

<%
if (ampStory.cuts.length === 2) {
  let cut = ampStory.cuts[ampStory.cuts.length - 1]
  ampStory.cuts = []
  ampStory.cuts[0] = cut
}
let currentSlide = ampStory.cuts.find(cut => {
  return cut.position === +current
})
%>

<body>

<amp-story class="single-slide" standalone poster-portrait-src="" publisher-logo-src="">
  <%for (let i = 0; i < 2; i++) {%>
  <amp-story-page style="text-rendering: auto;background: #eeeeee" id="<%=`story${i}`%>>" class="container">
    <% let preview = false;
      if (currentSlide) {
        currentSlide.layers.sort((first, second) => {
          var keyA = first.position,
            keyB = second.position;
          if(keyA < keyB) return -1;
          if(keyA > keyB) return 1;
          return 0;
        })
      } %>
    <% if (currentSlide) { %>
      <% currentSlide && currentSlide.layers && currentSlide.layers.map((layer, layerIndex) => { %>
        <% var page = null
          switch (layer.type) {
          case 'text':
        case 'html': %>
        <amp-story-grid-layer template="horizontal" style="background: <%=getBgColor(currentSlide)%>;">
          <%- include('./components/text-layer.ejs', {withEvent: false, withAnimations: true, layer, currentSlide, preview})%>
        </amp-story-grid-layer>
        <% break;

        case 'shape': %>
        <amp-story-grid-layer template="horizontal" style="background: <%=getBgColor(currentSlide)%>;">
          <%- include('./components/shape-layer.ejs', {withEvent: false, withAnimations: true, layer, currentSlide, preview})%>
        </amp-story-grid-layer>
        <% break;

          case 'image':
        case 'gifs': %>
        <% if (layer.content.image && layer.content.image) { %>
          <% if (((!['pan-left', 'pan-right', 'pan-up', 'pan-down'].includes(layer.settings.animateIn) || !layer.settings.animateIn) && (!layer.content.compressed && !zipExport)) ||
            (((layer.content.compressed || zipExport) && !layer.settings.layerSettings.fullscreen)) ||
            ['rotate-in-right', 'rotate-in-left', 'twirl-in'].includes(layer.settings.animateIn) && (layer.content.compressed || zipExport)) { %>
            <amp-story-grid-layer template="horizontal" style="background: <%=getBgColor(currentSlide)%>;">
              <%- include('./components/image-layer.ejs', {withEvent: true, withAnimations: false, layer, currentSlide, preview})%>
            </amp-story-grid-layer>
          <% } else { %>
            <amp-story-grid-layer template="fill" style="background: <%=getBgColor(currentSlide)%>;">
              <%- include('layers/image.ejs', {withAnimations: true, layer, zipExport }); %>
            </amp-story-grid-layer>
          <% } %>
        <% } %>
        <% break

        case 'video': %>
        <% if (layer.content.video && layer.content.video) { %>
          <% if (((!['pan-left', 'pan-right', 'pan-up', 'pan-down'].includes(layer.settings.animateIn) || !layer.settings.animateIn) && !layer.content.compressed) ||
            ((layer.content.compressed && !layer.settings.layerSettings.fullscreen)) ||
            ['rotate-in-right', 'rotate-in-left', 'twirl-in'].includes(layer.settings.animateIn) && layer.content.compressed) { %>
            <amp-story-grid-layer template="horizontal" style="background: <%=getBgColor(currentSlide)%>;">
              <%- include('./components/video-layer.ejs', {layer, currentSlide, preview})%>
            </amp-story-grid-layer>
          <% } else { %>
            <amp-story-grid-layer template="fill" style="background: <%=getBgColor(currentSlide)%>;">
              <%- include('layers/video.ejs', {withAnimations: true, layer, duration: currentSlide.duration, zipExport: false }); %>
            </amp-story-grid-layer>
          <% } %>
        <% } %>
        <% break
        } %>
      <% }) %>
    <% } %>
  </amp-story-page>
  <% } %>
</amp-story>
</body>

</html>
