<svg
        xmlns='http://www.w3.org/2000/svg'
        xmlns:xlink='http://www.w3.org/1999/xlink'
        width='<%= getSvgSizeInProcentage('width') %>'
        height='<%= getSvgSizeInProcentage('height') %>'
        style='<%=`overflow: visible; filter: url(#shadow${layer.position}); transform: translate(${getSvgTranslate()}px, ${getSvgTranslate()}px); width: calc(100% - ${layer.settings.layerSettings.shapeStyles.thickness}px); height: calc(100% - ${layer.settings.layerSettings.shapeStyles.thickness}px);`%>'
        viewBox='0 -16 64 48'
        preserveAspectRatio='none'
>
    <defs>
        <filter id='<%=`shadow${layer.position}`%>' width='200%' height='200%' x='-40%' y='-40%'>
            <%if (layer.settings.generalSettings.shadow !== '0') { %>
            <feDropShadow flood-opacity='<%=layer.settings.generalSettings.shadow == '0' ? '0' : '1'%>' dx='0' dy='0' stdDeviation='<%= layer.settings.generalSettings.shadow / 10 %>' />
            <% } %>
        </filter>

        <linearGradient id='<%=`linearfillColor${currentSlide.position}${layer.position}`%>' x1="<%= setCoordinates('x1') %>" y1="<%= setCoordinates('y1') %>" x2="<%= setCoordinates('x2') %>" y2="<%= setCoordinates('y2') %>">
            <stop offset="<%=`${layer.settings.layerSettings.shapeStyles.fillColor.leftColorPercent}%`%>" style="stop-color:<%=`${layer.settings.layerSettings.shapeStyles.fillColor.leftColor};stop-opacity:1`%>"/>
            <stop offset="<%=`${layer.settings.layerSettings.shapeStyles.fillColor.rightColorPercent}%`%>" style="stop-color:<%=`${layer.settings.layerSettings.shapeStyles.fillColor.rightColor};stop-opacity:1`%>"/>
        </linearGradient>

        <radialGradient id='<%=`radialfillColor${currentSlide.position}${layer.position}`%>' cx="50%" cy="50%" r="100%" fx="<%=`${layer.settings.layerSettings.shapeStyles.fillColor.horizontalDirection}%`%>" fy="<%=`${layer.settings.layerSettings.shapeStyles.fillColor.verticalDirection}%`%>">
            <stop offset="<%=`${layer.settings.layerSettings.shapeStyles.fillColor.leftColorPercent}%`%>" style="stop-color:<%=`${layer.settings.layerSettings.shapeStyles.fillColor.leftColor};stop-opacity:1`%>"/>
            <stop offset="<%=`${layer.settings.layerSettings.shapeStyles.fillColor.rightColorPercent}%`%>" style="stop-color:<%=`${layer.settings.layerSettings.shapeStyles.fillColor.rightColor};stop-opacity:1`%>"/>
        </radialGradient>

        <linearGradient id='<%=`linearborderColor${currentSlide.position}${layer.position}`%>' x1="<%= setCoordinates('x1') %>" y1="<%= setCoordinates('y1') %>" x2="<%= setCoordinates('x2') %>" y2="<%= setCoordinates('y2') %>">
            <stop offset="<%=`${layer.settings.layerSettings.shapeStyles.borderColor.leftColorPercent}%`%>" style="stop-color:<%=`${layer.settings.layerSettings.shapeStyles.borderColor.leftColor};stop-opacity:1`%>"/>
            <stop offset="<%=`${layer.settings.layerSettings.shapeStyles.borderColor.rightColorPercent}%`%>" style="stop-color:<%=`${layer.settings.layerSettings.shapeStyles.borderColor.rightColor};stop-opacity:1`%>"/>
        </linearGradient>

        <radialGradient id='<%=`radialborderColor${currentSlide.position}${layer.position}`%>' cx="50%" cy="50%" r="100%" fx="<%=`${layer.settings.layerSettings.shapeStyles.borderColor.horizontalDirection}%`%>" fy="<%=`${layer.settings.layerSettings.shapeStyles.borderColor.verticalDirection}%`%>">
            <stop offset="<%=`${layer.settings.layerSettings.shapeStyles.borderColor.leftColorPercent}%`%>" style="stop-color:<%=`${layer.settings.layerSettings.shapeStyles.borderColor.leftColor};stop-opacity:1`%>"/>
            <stop offset="<%=`${layer.settings.layerSettings.shapeStyles.borderColor.rightColorPercent}%`%>" style="stop-color:<%=`${layer.settings.layerSettings.shapeStyles.borderColor.rightColor};stop-opacity:1`%>"/>
        </radialGradient>
    </defs>
    <g>
        <g>
            <use fill='transparent'/>
            <path
                    d='M 0 8 L 4 16 L 60 16 L 64 8 L 60 0 L 4 0 z'
                    stroke='<%= setColor('borderColor') %>'
                    fill='<%= setColor('fillColor') %>'
                    stroke-width='<%= layer.settings.layerSettings.shapeStyles.thickness && layer.settings.layerSettings.shapeStyles.thickness >= 0 ? layer.settings.layerSettings.shapeStyles.thickness : 0 %>'
                    vector-effect='non-scaling-stroke'>
            </path>
        </g>
    </g>
</svg>

<%function getSvgSizeInProcentage(type) {
    return (100 * (layer.settings.layerSettings[type] + layer.settings.layerSettings.shapeStyles.thickness / 2)) /
            (layer.settings.layerSettings[type] + layer.settings.layerSettings.shapeStyles.thickness * 1.5) + '%';
} %>

<%function getSvgTranslate() {
    return layer.settings.layerSettings.shapeStyles.thickness / 2;
} %>

<%function setColor(type) {
    if (layer.settings.layerSettings) {
        return layer.settings.layerSettings.shapeStyles[type].type === 'solid' ? layer.settings.layerSettings.shapeStyles[type].leftColor :
                `url(#${layer.settings.layerSettings.shapeStyles[type].type === 'linear' ? 'linear' : 'radial'}${type}${currentSlide.position}${layer.position})`
    } else {
        return 'black'
    }
} %>

<%function setCoordinates(type) {
    const anglePI = -layer.settings.layerSettings.shapeStyles.fillColor.angle * (Math.PI / 180);
    switch (type) {
        case 'x1':
            return Math.round(50 + Math.sin(anglePI) * 50) + '%';
        case 'y1':
            return Math.round(50 + Math.cos(anglePI) * 50) + '%';
        case 'x2':
            return Math.round(50 + Math.sin(anglePI + Math.PI) * 50) + '%'
        case 'y2':
            return Math.round(50 + Math.cos(anglePI + Math.PI) * 50) + '%'
    }
} %>
